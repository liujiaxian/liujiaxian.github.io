<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>先修客</title>
  
  <subtitle>专业互联网开发</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.jihuiweb.com/"/>
  <updated>2021-09-04T06:33:48.000Z</updated>
  <id>https://blog.jihuiweb.com/</id>
  
  <author>
    <name>刘嘉先</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>flarum 安装问题</title>
    <link href="https://blog.jihuiweb.com/2020/10/30/category/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/flarum%20%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98/"/>
    <id>https://blog.jihuiweb.com/2020/10/30/category/服务器运维/flarum 安装问题/</id>
    <published>2020-10-30T14:07:00.000Z</published>
    <updated>2021-09-04T06:33:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>PHP Warning Phar::mapPhar() open_basedir restriction in effect<br><a id="more"></a></p><h4 id="PHP-Warning-Phar-mapPhar-open-basedir-restriction-in-effect"><a href="#PHP-Warning-Phar-mapPhar-open-basedir-restriction-in-effect" class="headerlink" title="PHP Warning:  Phar::mapPhar(): open_basedir restriction in effect"></a>PHP Warning:  Phar::mapPhar(): open_basedir restriction in effect</h4><p>PHP Warning:  Phar::mapPhar(): open_basedir restriction in effect. File(/usr/local/bin/composer) is not within the allowed path(s): (/srv/http/:/home/:/tmp/:/usr/share/pear/:/usr/share/webapps/) in /usr/local/bin/composer on line 13<br>PHP Warning:  require(phar://composer.phar/bin/composer): failed to open stream: phar error: invalid url or non-existent phar “phar://composer.phar/bin/composer” in /usr/local/bin/composer on line 15<br>PHP Fatal error:  require(): Failed opening required ‘phar://composer.phar/bin/composer’ (include_path=’.:/usr/share/pear’) in /usr/local/bin/composer on line 15</p><p>[color=blue]删除.user.ini文件或者修改 php的配置文件my.ini里的open_basedir=(应用程序目录)或者修改 nginx 的的配置文件fastcgi.conf里的fastcgi_param PHP_ADMIN_VALUE “open_basedir=(应用程序目录):/tmp/:/proc/“;[/color]</p><h4 id="PHP-Fatal-error-Class-UpdateHelper-ComposerPlugin-contains-2"><a href="#PHP-Fatal-error-Class-UpdateHelper-ComposerPlugin-contains-2" class="headerlink" title="PHP Fatal error:  Class UpdateHelper\ComposerPlugin contains 2"></a>PHP Fatal error:  Class UpdateHelper\ComposerPlugin contains 2</h4><p>PHP Fatal error:  Class UpdateHelper\ComposerPlugin contains 2 abstract methods and must therefore be declared abstract or implement the remaining methods (Composer\Plugin\PluginInterface::deactivate, Composer\Plugin\PluginInterface::uninstall) in /mnt/www/wwwroot/flarum/vendor/kylekatarnls/update-helper/src/UpdateHelper/ComposerPlugin.php on line 11</p><p>Fatal error: Class UpdateHelper\ComposerPlugin contains 2 abstract methods and must therefore be declared abstract or implement the remaining methods (Composer\Plugin\PluginInterface::deactivate, Composer\Plugin\PluginInterface::uninstall) in /mnt/www/wwwroot/flarum/vendor/kylekatarnls/update-helper/src/UpdateHelper/ComposerPlugin.php on line 11<br>[root@localhost flarum]# composer -v<br>PHP Fatal error:  Class UpdateHelper\ComposerPlugin contains 2 abstract methods and must therefore be declared abstract or implement the remaining methods (Composer\Plugin\PluginInterface::deactivate, Composer\Plugin\PluginInterface::uninstall) in /mnt/www/wwwroot/flarum/vendor/kylekatarnls/update-helper/src/UpdateHelper/ComposerPlugin.php on line 11</p><p>Fatal error: Class UpdateHelper\ComposerPlugin contains 2 abstract methods and must therefore be declared abstract or implement the remaining methods (Composer\Plugin\PluginInterface::deactivate, Composer\Plugin\PluginInterface::uninstall) in /mnt/www/wwwroot/flarum/vendor/kylekatarnls/update-helper/src/UpdateHelper/ComposerPlugin.php on line 11</p><p>[color=blue]进入你的项目/vendor/[/color]</p>]]></content>
    
    <summary type="html">
    
      PHP Warning Phar::mapPhar() open_basedir restriction in effect
    
    </summary>
    
      <category term="服务器运维" scheme="https://blog.jihuiweb.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="flarum" scheme="https://blog.jihuiweb.com/tags/flarum/"/>
    
  </entry>
  
  <entry>
    <title>jenkins pipeline 通配符处理</title>
    <link href="https://blog.jihuiweb.com/2020/09/11/category/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/jenkins%20pipeline%20%E9%80%9A%E9%85%8D%E7%AC%A6%E5%A4%84%E7%90%86/"/>
    <id>https://blog.jihuiweb.com/2020/09/11/category/服务器运维/jenkins pipeline 通配符处理/</id>
    <published>2020-09-11T11:21:00.000Z</published>
    <updated>2021-09-04T06:18:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>编写 jenkins pipeline 执行一个sh “rm -f ${path}/jar” 出现问题，会在执行体上加引号导致执行语句没有成功，结果是 rm -f ‘${path}/jar’<br><a id="more"></a></p><h3 id="查找解决方案"><a href="#查找解决方案" class="headerlink" title="查找解决方案"></a>查找解决方案</h3><p>1.通配符加单引号，通配符转义都不行<br>2.通过eval ls <a href="http://bbs.chinaunix.net/forum.php?mod=viewthread&amp;tid=4156672" target="_blank" rel="noopener">原文地址</a><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">file_name=`eval ls *$yesterday_dir-*`</span><br><span class="line">tar_log()&#123;</span><br><span class="line">        tar zcvf $log_time.tar.gz $file_name  --remove-files</span><br><span class="line">        mv $log_time.tar.gz $yesterday_dir</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p><p>3.通过查找方式删除(我最后用的是这个方案解决了)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh &quot;/bin/find $&#123;path&#125; -name &apos;\\*.jar&apos; -type f -exec /bin/rm -f &#123;&#125; +&quot;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      编写 jenkins pipeline 执行一个sh &quot;rm -f ${path}/jar&quot; 出现问题，会在执行体上加引号导致执行语句没有成功，结果是 rm -f &#39;${path}/jar&#39;
    
    </summary>
    
      <category term="服务器运维" scheme="https://blog.jihuiweb.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="jenkins" scheme="https://blog.jihuiweb.com/tags/jenkins/"/>
    
      <category term="pipeline" scheme="https://blog.jihuiweb.com/tags/pipeline/"/>
    
  </entry>
  
  <entry>
    <title>微信头像地址失效</title>
    <link href="https://blog.jihuiweb.com/2020/05/08/category/java/%E5%BE%AE%E4%BF%A1%E5%A4%B4%E5%83%8F%E5%9C%B0%E5%9D%80%E5%A4%B1%E6%95%88/"/>
    <id>https://blog.jihuiweb.com/2020/05/08/category/java/微信头像地址失效/</id>
    <published>2020-05-08T01:48:49.000Z</published>
    <updated>2021-09-04T05:57:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>开发过程中为了用户体验，没有限制用户上传图片，产品一定要有图片，用户没有上传图片情况下就使用用户头像，头像地址是存在数据库的，当用户微信头像换了，或者其他原因无法保证图片一定有效，就会导致项目中的图片无法查看，被用户投诉。<br><a id="more"></a></p><h3 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h3><h4 id="无法访问的图片响应内容"><a href="#无法访问的图片响应内容" class="headerlink" title="无法访问的图片响应内容"></a>无法访问的图片响应内容</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Cache-Control: no-cache</span><br><span class="line">Content-Length: 5093</span><br><span class="line">Content-Type: image/png</span><br><span class="line">Last-Modified: Mon, 01 Jan 1990 00:00:00 GMT</span><br><span class="line">Server: ImgHttp3.0.0</span><br><span class="line">X-BCheck: 0_0</span><br><span class="line">X-Cpt: filename=0</span><br><span class="line">X-ErrNo: -6101</span><br><span class="line">X-Info: notexist:-6101</span><br><span class="line">X-RtFlag: 0</span><br></pre></td></tr></table></figure><h4 id="正常访问的图片响应"><a href="#正常访问的图片响应" class="headerlink" title="正常访问的图片响应"></a>正常访问的图片响应</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Cache-Control: max-age=2592000</span><br><span class="line">chid: 0</span><br><span class="line">Content-Length: 3558</span><br><span class="line">Content-Type: image/jpeg</span><br><span class="line">fid: 0</span><br><span class="line">Last-Modified: Sun, 03 Nov 2019 20:50:59 GMT</span><br><span class="line">Server: ImgHttp3.0.0</span><br><span class="line">Size: 3558</span><br><span class="line">User-ReturnCode: 0</span><br><span class="line">Vary: Accept,Origin</span><br><span class="line">X-BCheck: 0_1</span><br><span class="line">X-Cpt: filename=0</span><br><span class="line">X-DataSrc: 0</span><br><span class="line">X-Delay: 4443 us</span><br><span class="line">X-Info: real data</span><br><span class="line">X-ReqGue: 0</span><br></pre></td></tr></table></figure><p>通过对比可以发现，可以根据X-Info: notexist:-6101 判断或者 X-ErrNo: -6101 关键字</p><blockquote><p>注意，不能通过状态去判断，因为都是返回200的状态的</p></blockquote><h3 id="获取响应代码"><a href="#获取响应代码" class="headerlink" title="获取响应代码"></a>获取响应代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"> public static boolean checkWechatPhoto(String photoUrl) &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            URL url = new URL(photoUrl);</span><br><span class="line">            URLConnection conn = url.openConnection();</span><br><span class="line"></span><br><span class="line">            Map headers = conn.getHeaderFields();</span><br><span class="line">            Set&lt;String&gt; keys = headers.keySet();</span><br><span class="line">            for (String key : keys) &#123;</span><br><span class="line">                String val = conn.getHeaderField(key);</span><br><span class="line">//                System.out.println(key + &quot;    &quot; + val);</span><br><span class="line">//                System.out.println(conn.getLastModified());</span><br><span class="line">                if(StringUtils.isNotEmpty(key) &amp;&amp; key.equalsIgnoreCase(&quot;X-ErrNo&quot;))&#123;</span><br><span class="line">                    if(val.equalsIgnoreCase(&quot;-6101&quot;))&#123;</span><br><span class="line">                        return false;</span><br><span class="line">                    &#125;else&#123;</span><br><span class="line">                        break;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            log.error(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>后续的处理需要结合你的业务处理，可以写个定时任务，定时去处理这些无法访问的图片，也可以写个线程用户触发的时候去判断处理，方法很多这里不一一举例了。</p>]]></content>
    
    <summary type="html">
    
      开发过程中为了用户体验，没有限制用户上传图片，产品一定要有图片，用户没有上传图片情况下就使用用户头像，头像地址是存在数据库的，当用户微信头像换了，或者其他原因无法保证图片一定有效，就会导致项目中的图片无法查看，被用户投诉。
    
    </summary>
    
      <category term="java" scheme="https://blog.jihuiweb.com/categories/java/"/>
    
    
      <category term="微信" scheme="https://blog.jihuiweb.com/tags/%E5%BE%AE%E4%BF%A1/"/>
    
      <category term="头像" scheme="https://blog.jihuiweb.com/tags/%E5%A4%B4%E5%83%8F/"/>
    
  </entry>
  
  <entry>
    <title>发送 上传文件的 post 请求</title>
    <link href="https://blog.jihuiweb.com/2020/04/29/category/java/%E5%8F%91%E9%80%81-%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E7%9A%84-post-%E8%AF%B7%E6%B1%82/"/>
    <id>https://blog.jihuiweb.com/2020/04/29/category/java/发送-上传文件的-post-请求/</id>
    <published>2020-04-29T07:13:26.000Z</published>
    <updated>2021-09-04T05:55:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近公司对接第三方的接口，对方的接口有一个参数需要上传一个multipart文件，用常规的 post 的请求一直失败<br><a id="more"></a></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><h4 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br></pre></td><td class="code"><pre><span class="line">package com.eryansky.modules.aiqiangua.utils;</span><br><span class="line"></span><br><span class="line">import com.alibaba.dubbo.common.logger.Logger;</span><br><span class="line">import com.alibaba.dubbo.common.logger.LoggerFactory;</span><br><span class="line">import com.alibaba.fastjson.JSON;</span><br><span class="line">import com.alibaba.fastjson.JSONObject;</span><br><span class="line">import org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line">import java.io.*;</span><br><span class="line">import java.net.HttpURLConnection;</span><br><span class="line">import java.net.URL;</span><br><span class="line">import java.util.HashMap;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * HTTP请求对象</span><br><span class="line"> *</span><br><span class="line"> * @author YYmmiinngg</span><br><span class="line"> */</span><br><span class="line">public class HttpUtil &#123;</span><br><span class="line">    private static Logger log = LoggerFactory.getLogger(HttpUtil.class);</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 常规 get</span><br><span class="line">     * @param requestUrl</span><br><span class="line">     * @param cookie</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static JSONObject sendGet(String requestUrl, String cookie) &#123;</span><br><span class="line">        log.info(&quot;url:&quot; + requestUrl);</span><br><span class="line">        String res = &quot;&quot;;</span><br><span class="line">        JSONObject object = null;</span><br><span class="line">        StringBuffer buffer = new StringBuffer();</span><br><span class="line">        try &#123;</span><br><span class="line">            URL url = new URL(requestUrl);</span><br><span class="line">            HttpURLConnection urlCon = (HttpURLConnection) url.openConnection();</span><br><span class="line">            urlCon.setRequestProperty(&quot;cookie&quot;, cookie); // 设置cookie</span><br><span class="line">            log.info(JSON.toJSONString(urlCon.getResponseCode()));</span><br><span class="line">            if (200 == urlCon.getResponseCode()) &#123;</span><br><span class="line">                InputStream is = urlCon.getInputStream();</span><br><span class="line">                InputStreamReader isr = new InputStreamReader(is, &quot;utf-8&quot;);</span><br><span class="line">                BufferedReader br = new BufferedReader(isr);</span><br><span class="line">                String str = null;</span><br><span class="line">                while ((str = br.readLine()) != null) &#123;</span><br><span class="line">                    buffer.append(str);</span><br><span class="line">                &#125;</span><br><span class="line">                br.close();</span><br><span class="line">                isr.close();</span><br><span class="line">                is.close();</span><br><span class="line">                res = buffer.toString();</span><br><span class="line">                JSONObject parse = new JSONObject();</span><br><span class="line">                object = (JSONObject) parse.parse(res);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                throw new Exception(&quot;连接失败&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        return object;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 常规 post</span><br><span class="line">     * @param strURL</span><br><span class="line">     * @param jsonStr</span><br><span class="line">     * @param cookie</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static JSONObject sendPost(String strURL, String jsonStr, String cookie) &#123;</span><br><span class="line">        log.info(&quot;url:&quot; + strURL);</span><br><span class="line">        OutputStreamWriter out = null;</span><br><span class="line">        InputStream is = null;</span><br><span class="line">        try &#123;</span><br><span class="line">            URL url = new URL(strURL);// 创建连接</span><br><span class="line">            HttpURLConnection connection = (HttpURLConnection) url.openConnection();</span><br><span class="line">            connection.setDoOutput(true);</span><br><span class="line">            connection.setDoInput(true);</span><br><span class="line">            connection.setUseCaches(false);</span><br><span class="line">            connection.setInstanceFollowRedirects(true);</span><br><span class="line">            connection.setRequestMethod(&quot;POST&quot;); // 设置请求方式</span><br><span class="line">            connection.setRequestProperty(&quot;Accept&quot;, &quot;application/json&quot;); // 设置接收数据的格式</span><br><span class="line">            connection.setRequestProperty(&quot;Content-Type&quot;, &quot;application/json&quot;); // 设置发送数据的格式</span><br><span class="line">            connection.setRequestProperty(&quot;cookie&quot;, cookie); // 设置cookie</span><br><span class="line">            connection.connect();</span><br><span class="line">            out = new OutputStreamWriter(connection.getOutputStream(), &quot;UTF-8&quot;); // utf-8编码</span><br><span class="line">            out.append(jsonStr);</span><br><span class="line">            out.flush();</span><br><span class="line">            out.close();</span><br><span class="line"></span><br><span class="line">            // 读取响应</span><br><span class="line">            is = connection.getInputStream();</span><br><span class="line">            int length = (int) connection.getContentLength();// 获取长度</span><br><span class="line">            if (length != -1) &#123;</span><br><span class="line">                byte[] data = new byte[length];</span><br><span class="line">                byte[] temp = new byte[512];</span><br><span class="line">                int readLen = 0;</span><br><span class="line">                int destPos = 0;</span><br><span class="line">                while ((readLen = is.read(temp)) &gt; 0) &#123;</span><br><span class="line">                    System.arraycopy(temp, 0, data, destPos, readLen);</span><br><span class="line">                    destPos += readLen;</span><br><span class="line">                &#125;</span><br><span class="line">                String result = new String(data, &quot;UTF-8&quot;); // utf-8编码</span><br><span class="line">                return JSON.parseObject(result);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                is.close();</span><br><span class="line">                out.close();</span><br><span class="line">            &#125; catch (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * post请求 不带file</span><br><span class="line">     * 参数使用</span><br><span class="line">     * JSONObject jp = new JSONObject();</span><br><span class="line">     * String param = jp.toJSONString()</span><br><span class="line">     */</span><br><span class="line">    public static JSONObject sendPostRequest(String fileOCRUrl, HashMap&lt;String, Object&gt; map, String cookie) &#123;</span><br><span class="line">        DataOutputStream out = null;</span><br><span class="line">        DataInputStream in = null;</span><br><span class="line">        final String newLine = &quot;\r\n&quot;;</span><br><span class="line">        final String prefix = &quot;--&quot;;</span><br><span class="line">        JSONObject json = null;</span><br><span class="line">        try &#123;</span><br><span class="line">            URL url = new URL(fileOCRUrl);</span><br><span class="line">            HttpURLConnection conn = (HttpURLConnection) url.openConnection();</span><br><span class="line"></span><br><span class="line">            String BOUNDARY = &quot;-------KingKe0520a&quot;;</span><br><span class="line">            conn.setRequestMethod(&quot;POST&quot;);</span><br><span class="line">            // 发送POST请求必须设置如下两行</span><br><span class="line">            conn.setDoOutput(true);</span><br><span class="line">            conn.setDoInput(true);</span><br><span class="line">            conn.setUseCaches(false);</span><br><span class="line">            conn.setRequestProperty(&quot;connection&quot;, &quot;Keep-Alive&quot;);</span><br><span class="line">            conn.setRequestProperty(&quot;Charsert&quot;, &quot;UTF-8&quot;);</span><br><span class="line">            conn.setRequestProperty(&quot;Content-Type&quot;, &quot;multipart/form-data; boundary=&quot; + BOUNDARY);</span><br><span class="line">            conn.setRequestProperty(&quot;cookie&quot;, cookie); // 设置cookie</span><br><span class="line">            out = new DataOutputStream(conn.getOutputStream());</span><br><span class="line"></span><br><span class="line">            StringBuilder sb = new StringBuilder();</span><br><span class="line">            int k = 1;</span><br><span class="line">            for (String key : map.keySet()) &#123;</span><br><span class="line">                if (k != 1) &#123;</span><br><span class="line">                    sb.append(newLine);</span><br><span class="line">                &#125;</span><br><span class="line">                sb.append(prefix);</span><br><span class="line">                sb.append(BOUNDARY);</span><br><span class="line">                sb.append(newLine);</span><br><span class="line">                sb.append(&quot;Content-Disposition: form-data;name=&quot; + key + &quot;&quot;);</span><br><span class="line">                sb.append(newLine);</span><br><span class="line">                sb.append(newLine);</span><br><span class="line">                sb.append(map.get(key));</span><br><span class="line">                out.write(sb.toString().getBytes());</span><br><span class="line">                sb.delete(0, sb.length());</span><br><span class="line">                k++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            byte[] end_data = (&quot;\r\n--&quot; + BOUNDARY + &quot;--\r\n&quot;).getBytes();</span><br><span class="line">            out.write(end_data);</span><br><span class="line">            out.flush();</span><br><span class="line"></span><br><span class="line">            // 定义BufferedReader输入流来读取URL的响应</span><br><span class="line">            BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));</span><br><span class="line">            String line = null;</span><br><span class="line">            StringBuffer resultStr = new StringBuffer();</span><br><span class="line">            while ((line = reader.readLine()) != null) &#123;</span><br><span class="line">                resultStr.append(line);</span><br><span class="line">            &#125;</span><br><span class="line">            json = (JSONObject) JSONObject.parse(resultStr.toString());</span><br><span class="line"></span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            System.out.println(&quot;发送POST请求出现异常！&quot; + e);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                if (out != null) &#123;</span><br><span class="line">                    out.close();</span><br><span class="line">                &#125;</span><br><span class="line">                if (in != null) &#123;</span><br><span class="line">                    in.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; catch (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return json;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * post请求 带file,map是其余参数</span><br><span class="line">     */</span><br><span class="line"></span><br><span class="line">    public static JSONObject sendPostWithFile(String fileOCRUrl, MultipartFile file, String fileKey, HashMap&lt;String, Object&gt; map, String cookie) &#123;</span><br><span class="line">        DataOutputStream out = null;</span><br><span class="line">        DataInputStream in = null;</span><br><span class="line">        final String newLine = &quot;\r\n&quot;;</span><br><span class="line">        final String prefix = &quot;--&quot;;</span><br><span class="line">        JSONObject json = null;</span><br><span class="line">        try &#123;</span><br><span class="line">            URL url = new URL(fileOCRUrl);</span><br><span class="line">            HttpURLConnection conn = (HttpURLConnection) url.openConnection();</span><br><span class="line"></span><br><span class="line">            String BOUNDARY = &quot;-------KingKe0520a&quot;;</span><br><span class="line">            conn.setRequestMethod(&quot;POST&quot;);</span><br><span class="line">            // 发送POST请求必须设置如下两行</span><br><span class="line">            conn.setDoOutput(true);</span><br><span class="line">            conn.setDoInput(true);</span><br><span class="line">            conn.setUseCaches(false);</span><br><span class="line">            conn.setRequestProperty(&quot;connection&quot;, &quot;Keep-Alive&quot;);</span><br><span class="line">            conn.setRequestProperty(&quot;Charsert&quot;, &quot;UTF-8&quot;);</span><br><span class="line">            conn.setRequestProperty(&quot;Content-Type&quot;, &quot;multipart/form-data; boundary=&quot; + BOUNDARY);</span><br><span class="line">            conn.setRequestProperty(&quot;cookie&quot;, cookie); // 设置cookie</span><br><span class="line">            out = new DataOutputStream(conn.getOutputStream());</span><br><span class="line"></span><br><span class="line">            // 添加参数file</span><br><span class="line">            // File file = new File(filePath);</span><br><span class="line">            StringBuilder sb1 = new StringBuilder();</span><br><span class="line">            sb1.append(prefix);</span><br><span class="line">            sb1.append(BOUNDARY);</span><br><span class="line">            sb1.append(newLine);</span><br><span class="line">            sb1.append(&quot;Content-Disposition: form-data;name=\&quot;&quot;+fileKey+&quot;\&quot;;filename=\&quot;&quot; + file.getName() + &quot;\&quot;&quot; + newLine);</span><br><span class="line">            sb1.append(&quot;Content-Type:application/octet-stream&quot;);</span><br><span class="line">            sb1.append(newLine);</span><br><span class="line">            sb1.append(newLine);</span><br><span class="line">            out.write(sb1.toString().getBytes());</span><br><span class="line">            // in = new DataInputStream(new FileInputStream(file));</span><br><span class="line">            in = new DataInputStream(file.getInputStream());</span><br><span class="line">            byte[] bufferOut = new byte[1024];</span><br><span class="line">            int bytes = 0;</span><br><span class="line">            while ((bytes = in.read(bufferOut)) != -1) &#123;</span><br><span class="line">                out.write(bufferOut, 0, bytes);</span><br><span class="line">            &#125;</span><br><span class="line">            out.write(newLine.getBytes());</span><br><span class="line"></span><br><span class="line">            StringBuilder sb = new StringBuilder();</span><br><span class="line">            int k = 1;</span><br><span class="line">            for (String key : map.keySet()) &#123;</span><br><span class="line">                if (k != 1) &#123;</span><br><span class="line">                    sb.append(newLine);</span><br><span class="line">                &#125;</span><br><span class="line">                sb.append(prefix);</span><br><span class="line">                sb.append(BOUNDARY);</span><br><span class="line">                sb.append(newLine);</span><br><span class="line">                sb.append(&quot;Content-Disposition: form-data;name=&quot; + key + &quot;&quot;);</span><br><span class="line">                sb.append(newLine);</span><br><span class="line">                sb.append(newLine);</span><br><span class="line">                sb.append(map.get(key));</span><br><span class="line">                out.write(sb.toString().getBytes());</span><br><span class="line">                sb.delete(0, sb.length());</span><br><span class="line">                k++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            // 添加参数sysName</span><br><span class="line">            /*StringBuilder sb = new StringBuilder();</span><br><span class="line">            sb.append(prefix);</span><br><span class="line">            sb.append(BOUNDARY);</span><br><span class="line">            sb.append(newLine);</span><br><span class="line">            sb.append(&quot;Content-Disposition: form-data;name=\&quot;sysName\&quot;&quot;);</span><br><span class="line">            sb.append(newLine);</span><br><span class="line">            sb.append(newLine);</span><br><span class="line">            sb.append(&quot;test&quot;);</span><br><span class="line">            out.write(sb.toString().getBytes());*/</span><br><span class="line"></span><br><span class="line">            // 添加参数returnImage</span><br><span class="line">            /*StringBuilder sb2 = new StringBuilder();</span><br><span class="line">            sb2.append(newLine);</span><br><span class="line">            sb2.append(prefix);</span><br><span class="line">            sb2.append(BOUNDARY);</span><br><span class="line">            sb2.append(newLine);</span><br><span class="line">            sb2.append(&quot;Content-Disposition: form-data;name=\&quot;returnImage\&quot;&quot;);</span><br><span class="line">            sb2.append(newLine);</span><br><span class="line">            sb2.append(newLine);</span><br><span class="line">            sb2.append(&quot;false&quot;);</span><br><span class="line">            out.write(sb2.toString().getBytes());*/</span><br><span class="line"></span><br><span class="line">            byte[] end_data = (&quot;\r\n--&quot; + BOUNDARY + &quot;--\r\n&quot;).getBytes();</span><br><span class="line">            out.write(end_data);</span><br><span class="line">            out.flush();</span><br><span class="line"></span><br><span class="line">            // 定义BufferedReader输入流来读取URL的响应</span><br><span class="line">            BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));</span><br><span class="line">            String line = null;</span><br><span class="line">            StringBuffer resultStr = new StringBuffer();</span><br><span class="line">            while ((line = reader.readLine()) != null) &#123;</span><br><span class="line">                resultStr.append(line);</span><br><span class="line">            &#125;</span><br><span class="line">            json = (JSONObject) JSONObject.parse(resultStr.toString());</span><br><span class="line"></span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            System.out.println(&quot;发送POST请求出现异常！&quot; + e);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                if (out != null) &#123;</span><br><span class="line">                    out.close();</span><br><span class="line">                &#125;</span><br><span class="line">                if (in != null) &#123;</span><br><span class="line">                    in.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; catch (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return json;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="通过-url-上传"><a href="#通过-url-上传" class="headerlink" title="通过 url 上传"></a>通过 url 上传</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line">package com.eryansky.modules.aiqiangua.utils;</span><br><span class="line"></span><br><span class="line">import org.apache.commons.fileupload.FileItem;</span><br><span class="line">import org.apache.commons.fileupload.FileItemFactory;</span><br><span class="line">import org.apache.commons.fileupload.disk.DiskFileItemFactory;</span><br><span class="line">import org.apache.http.entity.ContentType;</span><br><span class="line">import org.springframework.web.multipart.MultipartFile;</span><br><span class="line">import org.springframework.web.multipart.commons.CommonsMultipartFile;</span><br><span class="line"></span><br><span class="line">import java.io.*;</span><br><span class="line">import java.net.HttpURLConnection;</span><br><span class="line">import java.net.URL;</span><br><span class="line"></span><br><span class="line">public class FileUtil &#123;</span><br><span class="line">    /**</span><br><span class="line">     * url转变为 MultipartFile对象</span><br><span class="line">     * @param url</span><br><span class="line">     * @param fileName</span><br><span class="line">     * @return</span><br><span class="line">     * @throws Exception</span><br><span class="line">     */</span><br><span class="line">    public static MultipartFile createFileItem(String url, String fileName) throws Exception&#123;</span><br><span class="line">        FileItem item = null;</span><br><span class="line">        try &#123;</span><br><span class="line">            HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection();</span><br><span class="line">            conn.setReadTimeout(30000);</span><br><span class="line">            conn.setConnectTimeout(30000);</span><br><span class="line">            //设置应用程序要从网络连接读取数据</span><br><span class="line">            conn.setDoInput(true);</span><br><span class="line">            conn.setRequestMethod(&quot;GET&quot;);</span><br><span class="line">            if (conn.getResponseCode() == HttpURLConnection.HTTP_OK) &#123;</span><br><span class="line">                InputStream is = conn.getInputStream();</span><br><span class="line"></span><br><span class="line">                FileItemFactory factory = new DiskFileItemFactory(16, null);</span><br><span class="line">                String textFieldName = fileName;</span><br><span class="line">                item = factory.createItem(textFieldName, ContentType.APPLICATION_OCTET_STREAM.toString(), false, fileName);</span><br><span class="line">                OutputStream os = item.getOutputStream();</span><br><span class="line"></span><br><span class="line">                int bytesRead = 0;</span><br><span class="line">                byte[] buffer = new byte[8192];</span><br><span class="line">                while ((bytesRead = is.read(buffer, 0, 8192)) != -1) &#123;</span><br><span class="line">                    os.write(buffer, 0, bytesRead);</span><br><span class="line">                &#125;</span><br><span class="line">                os.close();</span><br><span class="line">                is.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            throw new RuntimeException(&quot;文件下载失败&quot;, e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return new CommonsMultipartFile(item);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * MultipartFile 转 File</span><br><span class="line">     *</span><br><span class="line">     * @param file</span><br><span class="line">     * @throws Exception</span><br><span class="line">     */</span><br><span class="line">    public static File multipartFileToFile(MultipartFile file) throws Exception &#123;</span><br><span class="line"></span><br><span class="line">        File toFile = null;</span><br><span class="line">        if (file.equals(&quot;&quot;) || file.getSize() &lt;= 0) &#123;</span><br><span class="line">            file = null;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            InputStream ins = null;</span><br><span class="line">            ins = file.getInputStream();</span><br><span class="line">            toFile = new File(file.getOriginalFilename());</span><br><span class="line">            inputStreamToFile(ins, toFile);</span><br><span class="line">            ins.close();</span><br><span class="line">        &#125;</span><br><span class="line">        return toFile;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //获取流文件</span><br><span class="line">    public static void inputStreamToFile(InputStream ins, File file) &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            OutputStream os = new FileOutputStream(file);</span><br><span class="line">            int bytesRead = 0;</span><br><span class="line">            byte[] buffer = new byte[8192];</span><br><span class="line">            while ((bytesRead = ins.read(buffer, 0, 8192)) != -1) &#123;</span><br><span class="line">                os.write(buffer, 0, bytesRead);</span><br><span class="line">            &#125;</span><br><span class="line">            os.close();</span><br><span class="line">            ins.close();</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 删除本地临时文件</span><br><span class="line">     * @param file</span><br><span class="line">     */</span><br><span class="line">    public static void delteTempFile(File file) &#123;</span><br><span class="line">        if (file != null) &#123;</span><br><span class="line">            File del = new File(file.toURI());</span><br><span class="line">            del.delete();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h3><blockquote><p>直接调用 key 是上传文件的 key ， cookie 是对方接口访问授权，可以根据自己的业务逻辑修改</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">    * 测试</span><br><span class="line">    *</span><br><span class="line">    * @param request</span><br><span class="line">    */</span><br><span class="line">   @ApiOperation(&quot;测试&quot;)</span><br><span class="line">   @RequestMapping(value = &#123;&quot;test&quot;&#125;, method = RequestMethod.POST)</span><br><span class="line">   @ResponseBody</span><br><span class="line">   public Result test(HttpServletRequest request, Integer type, @RequestParam(value = &quot;file&quot;, required = false) MultipartFile file) &#123;</span><br><span class="line">       try &#123;</span><br><span class="line">           //url 的调用</span><br><span class="line">           String cookie = &quot;第三方授权返回的cookie&quot;;</span><br><span class="line">           HashMap&lt;String, Object&gt; params = new HashMap&lt;&gt;();</span><br><span class="line">           if (type != null) &#123;</span><br><span class="line">               file = FileUtil.createFileItem(&quot;远程文件地址&quot;, &quot;文件名称例如123.png&quot;);</span><br><span class="line">           &#125;</span><br><span class="line">           JSONObject result = HttpRequester.sendPostWithFile(&quot;接口地址&quot;, file, &quot;key&quot;, params, cookie);</span><br><span class="line">           return Result.success().setData(result);</span><br><span class="line">       &#125;catch (Exception e)&#123;</span><br><span class="line">           logger.error(e.getMessage(), e);</span><br><span class="line">           return Result.error().setMsg(e.getMessage());</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><a href="https://blog.csdn.net/qq_17782389/article/details/91519554" target="_blank" rel="noopener">参考文章</a></p><p>出现问题不可怕，关键是要定位到问题的关键，才能快速解决问题！</p>]]></content>
    
    <summary type="html">
    
      最近公司对接第三方的接口，对方的接口有一个参数需要上传一个multipart文件，用常规的 post 的请求一直失败
    
    </summary>
    
      <category term="java" scheme="https://blog.jihuiweb.com/categories/java/"/>
    
    
      <category term="文件" scheme="https://blog.jihuiweb.com/tags/%E6%96%87%E4%BB%B6/"/>
    
      <category term="post" scheme="https://blog.jihuiweb.com/tags/post/"/>
    
  </entry>
  
  <entry>
    <title>ImportError No module named tqdm</title>
    <link href="https://blog.jihuiweb.com/2020/04/09/category/nodejs/ImportError%20No%20module%20named%20tqdm/"/>
    <id>https://blog.jihuiweb.com/2020/04/09/category/nodejs/ImportError No module named tqdm/</id>
    <published>2020-04-09T09:47:00.000Z</published>
    <updated>2021-09-04T06:10:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>node 项目执行报错没有安装模块 tqdm ,然后立马安装了该模块，但是执行还是提示没有安装该模块<br><a id="more"></a></p><h3 id="错误提示"><a href="#错误提示" class="headerlink" title="错误提示"></a>错误提示</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">File &quot;main.py&quot;, line 15, in</span><br><span class="line">import tqdm</span><br><span class="line">ModuleNotFoundError: No module named &apos;tqdm&apos;</span><br></pre></td></tr></table></figure><h3 id="安装模块"><a href="#安装模块" class="headerlink" title="安装模块"></a>安装模块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install tqdm</span><br></pre></td></tr></table></figure><blockquote><p>提示安装成功了，执行后提示没有安装</p></blockquote><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>[colorr]原因是的pip3和python3不匹配[/colorr]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m pip3 install tqdm</span><br></pre></td></tr></table></figure><blockquote><p>本人没有学习过 nodejs 所有导致问题产生不知道如何解决，最终通过网络搜索出解决方法</p></blockquote><p><a href="https://github.com/tqdm/tqdm/issues/497" target="_blank" rel="noopener">原文地址</a></p>]]></content>
    
    <summary type="html">
    
      node 项目执行报错没有安装模块 tqdm ,然后立马安装了该模块，但是执行还是提示没有安装该模块
    
    </summary>
    
      <category term="nodejs" scheme="https://blog.jihuiweb.com/categories/nodejs/"/>
    
    
      <category term="ImportError" scheme="https://blog.jihuiweb.com/tags/ImportError/"/>
    
      <category term="tqdm" scheme="https://blog.jihuiweb.com/tags/tqdm/"/>
    
  </entry>
  
  <entry>
    <title>抖音用户关注设计方案</title>
    <link href="https://blog.jihuiweb.com/2020/04/01/category/java/%E6%8A%96%E9%9F%B3%E7%94%A8%E6%88%B7%E5%85%B3%E6%B3%A8%E8%AE%BE%E8%AE%A1%E6%96%B9%E6%A1%88/"/>
    <id>https://blog.jihuiweb.com/2020/04/01/category/java/抖音用户关注设计方案/</id>
    <published>2020-04-01T10:06:04.000Z</published>
    <updated>2021-09-04T05:54:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近公司需要做一个类似抖音的用户关注、粉丝模块，当然不仅仅是查关注用户和粉丝用户，主要是查用户的关注、粉丝用户和当前登录用户的关系，这个有点绕！<br><a id="more"></a></p><h3 id="表设计"><a href="#表设计" class="headerlink" title="表设计"></a>表设计</h3><p>这里创建了两张表一张用户关注和被关注的关系表，另外的一张为日志表，具体按你的业务逻辑设计，切忌不要将用户和被关注的用户记录数只记录一条，后面查询会非常复杂，本人亲测</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `t_base_custom_follow` (</span><br><span class="line">  `id` varchar(32) NOT NULL COMMENT &apos;主键 id&apos;,</span><br><span class="line">  `custom_id` varchar(32) NOT NULL COMMENT &apos;关注用户&apos;,</span><br><span class="line">  `be_custom_id` varchar(32) NOT NULL COMMENT &apos;被关注用户&apos;,</span><br><span class="line">  `create_time` datetime NOT NULL COMMENT &apos;关注时间&apos;,</span><br><span class="line">  `update_time` datetime NOT NULL COMMENT &apos;更新时间&apos;,</span><br><span class="line">  `status` int(1) NOT NULL COMMENT &apos;状态 0关注 1相互关注 2拉黑&apos;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `custom_id_union` (`custom_id`,`be_custom_id`) USING BTREE COMMENT &apos;唯一索引&apos;,</span><br><span class="line">  KEY `custom_id` (`custom_id`) USING BTREE COMMENT &apos;关注用户&apos;,</span><br><span class="line">  KEY `be_custom_id` (`be_custom_id`) USING BTREE COMMENT &apos;被关注用户&apos;</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT=&apos;用户关注关系表&apos;;</span><br><span class="line"></span><br><span class="line">CREATE TABLE `t_base_custom_follow_log` (</span><br><span class="line">  `id` varchar(32) NOT NULL COMMENT &apos;主键 id&apos;,</span><br><span class="line">  `custom_id` varchar(32) NOT NULL COMMENT &apos;关注用户&apos;,</span><br><span class="line">  `be_custom_id` varchar(32) NOT NULL COMMENT &apos;被关注用户&apos;,</span><br><span class="line">  `create_time` datetime NOT NULL COMMENT &apos;关注时间&apos;,</span><br><span class="line">  `type` int(1) NOT NULL COMMENT &apos;类型 0关注 1取消关注&apos;,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT=&apos;用户关注关系记录表&apos;;</span><br></pre></td></tr></table></figure><h3 id="功能模块"><a href="#功能模块" class="headerlink" title="功能模块"></a>功能模块</h3><h4 id="关注和取消关注"><a href="#关注和取消关注" class="headerlink" title="关注和取消关注"></a>关注和取消关注</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">public Integer updateFollow(String customId, String beCustomId, Integer type) &#123;</span><br><span class="line">        Assert.hasText(customId, &quot;参数错误&quot;);</span><br><span class="line">        Assert.hasText(beCustomId, &quot;参数错误&quot;);</span><br><span class="line">        Assert.notNull(type, &quot;参数错误&quot;);</span><br><span class="line"></span><br><span class="line">        Integer status = 0;</span><br><span class="line"></span><br><span class="line">        TBaseCustomFollow model = tBaseCustomFollowMapper.getFollowInfo(customId, beCustomId);</span><br><span class="line">        if (type == 0) &#123;</span><br><span class="line">            //关注</span><br><span class="line">            Assert.isTrue(!customId.equalsIgnoreCase(beCustomId), &quot;不能关注自己&quot;);</span><br><span class="line"></span><br><span class="line">            Assert.isNull(model, &quot;已经关注了&quot;);</span><br><span class="line"></span><br><span class="line">            TBaseCustomFollow isFollow = tBaseCustomFollowMapper.getFollowInfo(beCustomId, customId);</span><br><span class="line">            if(isFollow!=null)&#123;</span><br><span class="line">                status = 1;</span><br><span class="line">                isFollow.setStatus(1);</span><br><span class="line">                isFollow.setUpdateTime(new Date());</span><br><span class="line">                this.updateByPKNotNull(isFollow);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            model = new TBaseCustomFollow();</span><br><span class="line">            model.setCustomId(customId);</span><br><span class="line">            model.setBeCustomId(beCustomId);</span><br><span class="line">            model.setCreateTime(new Date());</span><br><span class="line">            model.setId(null);</span><br><span class="line">            model.setStatus(status);</span><br><span class="line">            model.setUpdateTime(new Date());</span><br><span class="line">            this.saveNotNull(model);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            Assert.isTrue(!customId.equalsIgnoreCase(beCustomId), &quot;不能取消关注自己&quot;);</span><br><span class="line">            //取消关注</span><br><span class="line">            Assert.notNull(model, &quot;还未关注，不能取消&quot;);</span><br><span class="line"></span><br><span class="line">            this.deleteByPK(model.getId());</span><br><span class="line"></span><br><span class="line">            TBaseCustomFollow isFollow = tBaseCustomFollowMapper.getFollowInfo(beCustomId, customId);</span><br><span class="line">            if(isFollow!=null)&#123;</span><br><span class="line">                isFollow.setStatus(0);</span><br><span class="line">                isFollow.setUpdateTime(new Date());</span><br><span class="line">                this.updateByPKNotNull(isFollow);</span><br><span class="line">            &#125;</span><br><span class="line">            status = 2;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        TBaseCustomFollowLog logModel = new TBaseCustomFollowLog();</span><br><span class="line">        logModel.setCustomId(customId);</span><br><span class="line">        logModel.setBeCustomId(beCustomId);</span><br><span class="line">        logModel.setCreateTime(new Date());</span><br><span class="line">        logModel.setType(type);</span><br><span class="line">        itBaseCustomFollowLogService.saveNotNull(logModel);</span><br><span class="line"></span><br><span class="line">        return status;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="关注、粉丝列表"><a href="#关注、粉丝列表" class="headerlink" title="关注、粉丝列表"></a>关注、粉丝列表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">public PageInfo getFollowList(TBaseCustomFollow model) &#123;</span><br><span class="line">        Assert.hasText(model.getCustomId(), &quot;参数错误&quot;);</span><br><span class="line">        Assert.notNull(model.getType(), &quot;参数错误&quot;);</span><br><span class="line">        Assert.hasText(model.getUserId(), &quot;请登录&quot;);</span><br><span class="line">        Assert.hasText(model.getCustomId(), &quot;用户id不能为空&quot;);</span><br><span class="line"></span><br><span class="line">        doPage(model.getPageNo(), model.getPageSize());</span><br><span class="line">        return new PageInfo(tBaseCustomFollowMapper.getFollowList(model));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>mybatis sql 语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">&lt;select id=&quot;getFollowList&quot; resultType=&quot;com.kanglefucn.business.admin.dao.model.TBaseCustomFollow&quot;&gt;</span><br><span class="line">        &lt;if test=&quot;type==0&quot;&gt;</span><br><span class="line">            select</span><br><span class="line">            A.id,</span><br><span class="line">            A.create_time createTime,</span><br><span class="line">            A.update_time updateTime,</span><br><span class="line">            A.be_custom_id customId,</span><br><span class="line">            &lt;if test=&quot;userId==customId&quot;&gt;</span><br><span class="line">                A.`status` &apos;userStatus&apos;,</span><br><span class="line">            &lt;/if&gt;</span><br><span class="line">            &lt;if test=&quot;userId!=customId&quot;&gt;</span><br><span class="line">                IF(tt.status is null,2,tt.status) &apos;userStatus&apos;,</span><br><span class="line">            &lt;/if&gt;</span><br><span class="line">            B.nickname userName,</span><br><span class="line">            IFNULL(B.oss_pictureurl, C.headimgurl) headerUrl</span><br><span class="line">            from t_base_custom_follow A</span><br><span class="line">            left join t_base_custom B on A.be_custom_id = B.id</span><br><span class="line">            left join t_base_custom_wechat C ON B.id = C.accountid</span><br><span class="line">            &lt;if test=&quot;userId!=customId&quot;&gt;</span><br><span class="line">                left join (</span><br><span class="line">                    select</span><br><span class="line">                    B.status,A.be_custom_id</span><br><span class="line">                    from t_base_custom_follow A left join</span><br><span class="line">                    t_base_custom_follow B on (A.be_custom_id = B.custom_id and B.be_custom_id = #&#123;userId&#125;)</span><br><span class="line">                    where A.custom_id = #&#123;customId&#125;</span><br><span class="line">                    group by A.custom_id,A.be_custom_id</span><br><span class="line">                ) tt on A.be_custom_id = tt.be_custom_id</span><br><span class="line">            &lt;/if&gt;</span><br><span class="line">            where A.custom_id = #&#123;customId&#125;</span><br><span class="line">            order by A.create_time desc</span><br><span class="line">        &lt;/if&gt;</span><br><span class="line">        &lt;if test=&quot;type==1&quot;&gt;</span><br><span class="line">            select</span><br><span class="line">            A.id,</span><br><span class="line">            A.create_time createTime,</span><br><span class="line">            A.update_time updateTime,</span><br><span class="line">            A.custom_id customId,</span><br><span class="line">            IF(tt.status is null,2,tt.status) &apos;userStatus&apos;,</span><br><span class="line">            B.nickname userName,</span><br><span class="line">            IFNULL(B.oss_pictureurl, C.headimgurl) headerUrl</span><br><span class="line">            from t_base_custom_follow A</span><br><span class="line">            left join t_base_custom B on A.custom_id = B.id</span><br><span class="line">            left join t_base_custom_wechat C ON B.id = C.accountid</span><br><span class="line">            &lt;if test=&quot;userId!=customId&quot;&gt;</span><br><span class="line">                left join (</span><br><span class="line">                    SELECT</span><br><span class="line">                        B.STATUS,A.custom_id</span><br><span class="line">                    FROM</span><br><span class="line">                    t_base_custom_follow A left join</span><br><span class="line">                    t_base_custom_follow B on (A.custom_id = B.be_custom_id and B.custom_id = #&#123;userId&#125;)</span><br><span class="line">                    WHERE</span><br><span class="line">                    A.be_custom_id = #&#123;customId&#125;</span><br><span class="line">                    GROUP BY</span><br><span class="line">                    A.custom_id,</span><br><span class="line">                    A.be_custom_id</span><br><span class="line">                ) tt on A.custom_id = tt.custom_id</span><br><span class="line">            &lt;/if&gt;</span><br><span class="line">            &lt;if test=&quot;userId==customId&quot;&gt;</span><br><span class="line">                left join (select status,be_custom_id from t_base_custom_follow where custom_id = #&#123;customId&#125;</span><br><span class="line">                group by custom_id,be_custom_id ) tt on A.custom_id = tt.be_custom_id</span><br><span class="line">            &lt;/if&gt;</span><br><span class="line">            where A.be_custom_id = #&#123;customId&#125;</span><br><span class="line">            order by A.create_time desc</span><br><span class="line">        &lt;/if&gt;</span><br><span class="line">    &lt;/select&gt;</span><br></pre></td></tr></table></figure><h4 id="查询关注、粉丝数"><a href="#查询关注、粉丝数" class="headerlink" title="查询关注、粉丝数"></a>查询关注、粉丝数</h4><p>mybatis sql 语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;select id=&quot;getFollowCount&quot; resultType=&quot;map&quot;&gt;</span><br><span class="line">        select sum(followCount) followCount,sum(t.beFollowCount) beFollowCount from(</span><br><span class="line">        select</span><br><span class="line">        count(1) followCount,0 beFollowCount</span><br><span class="line">        from t_base_custom_follow</span><br><span class="line">        where custom_id = #&#123;customId&#125;</span><br><span class="line">        union all</span><br><span class="line">        select</span><br><span class="line">        0 followCount, count(1) beFollowCount</span><br><span class="line">        from t_base_custom_follow</span><br><span class="line">        where be_custom_id = #&#123;customId&#125;</span><br><span class="line">        ) t</span><br><span class="line">    &lt;/select&gt;</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p>现阶段先这样使用着先吧，设计是开发效率最大的提升，设计的好，你写代码事半功倍，设计不好，代码写的复杂，效率性能也差，如果你有更好的方案，请留言，谢谢指教</p></blockquote>]]></content>
    
    <summary type="html">
    
      最近公司需要做一个类似抖音的用户关注、粉丝模块，当然不仅仅是查关注用户和粉丝用户，主要是查用户的关注、粉丝用户和当前登录用户的关系，这个有点绕！
    
    </summary>
    
      <category term="java" scheme="https://blog.jihuiweb.com/categories/java/"/>
    
    
      <category term="用户关注" scheme="https://blog.jihuiweb.com/tags/%E7%94%A8%E6%88%B7%E5%85%B3%E6%B3%A8/"/>
    
      <category term="设计" scheme="https://blog.jihuiweb.com/tags/%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>ELK 日志分析系统搭建</title>
    <link href="https://blog.jihuiweb.com/2020/03/17/category/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/ELK%20%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/"/>
    <id>https://blog.jihuiweb.com/2020/03/17/category/服务器运维/ELK 日志分析系统搭建/</id>
    <published>2020-03-17T08:15:00.000Z</published>
    <updated>2021-09-04T06:13:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>在过往的单体应用时代，我们所有组件都部署到一台服务器中，那时日志管理平台的需求可能并没有那么强烈，我们只需要登录到一台服务器通过shell命令就可以很方便的查看系统日志，并快速定位问题。<br><a id="more"></a></p><blockquote><p>在过往的单体应用时代，我们所有组件都部署到一台服务器中，那时日志管理平台的需求可能并没有那么强烈，我们只需要登录到一台服务器通过shell命令就可以很方便的查看系统日志，并快速定位问题。</p></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a><a href="https://elk-docker.readthedocs.io/#installation" target="_blank" rel="noopener">安装</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker pull sebp/elk</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run -p 5601:5601 -p 9200:9200 -p 5044:5044 -it --name elk sebp/elk</span><br></pre></td></tr></table></figure><p>[colorr]如果出现Elasticsearch等待安装失败的提示请执行下面的设置[/colorr]</p><p>查询虚拟内存值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl vm.max_map_count</span><br></pre></td></tr></table></figure></p><p>如果不是[colorg]262144[/colorg]请更新此值，<a href="https://www.elastic.co/guide/en/elasticsearch/reference/5.0/vm-max-map-count.html#vm-max-map-count" target="_blank" rel="noopener">教程</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl -w vm.max_map_count=262144</span><br></pre></td></tr></table></figure><p>访问 http://<your-host>:5601 成功即安装完成</your-host></p>]]></content>
    
    <summary type="html">
    
      在过往的单体应用时代，我们所有组件都部署到一台服务器中，那时日志管理平台的需求可能并没有那么强烈，我们只需要登录到一台服务器通过shell命令就可以很方便的查看系统日志，并快速定位问题。
    
    </summary>
    
      <category term="服务器运维" scheme="https://blog.jihuiweb.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="ELK" scheme="https://blog.jihuiweb.com/tags/ELK/"/>
    
      <category term="日志" scheme="https://blog.jihuiweb.com/tags/%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>异步回调重复处理</title>
    <link href="https://blog.jihuiweb.com/2020/03/11/category/java/%E5%BC%82%E6%AD%A5%E5%9B%9E%E8%B0%83%E9%87%8D%E5%A4%8D%E5%A4%84%E7%90%86/"/>
    <id>https://blog.jihuiweb.com/2020/03/11/category/java/异步回调重复处理/</id>
    <published>2020-03-11T06:34:30.000Z</published>
    <updated>2021-09-04T05:57:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>现在对接第三方接口很多情况都会有异步回调模块，微信支付、网易云信等都有，回调不仅是一次的，多次的情况如何避免多次重复调用问题呢？<br><a id="more"></a></p><h3 id="正常处理"><a href="#正常处理" class="headerlink" title="正常处理"></a>正常处理</h3><h4 id="使用队列和线程"><a href="#使用队列和线程" class="headerlink" title="使用队列和线程"></a>使用队列和线程</h4><p>1.通过回调方法解密回调内容，将内容放到队列中，防止频繁的调用数据库 io 频繁，导致数据库崩溃<br>2.用线程往队列里取数据进行处理，排队处理不会出现并发等问题产生</p><h4 id="使用消息中间件"><a href="#使用消息中间件" class="headerlink" title="使用消息中间件"></a>使用消息中间件</h4><p>1.通过回调方法解密回调内容，将内容添加到消息队列中<br>2.通过处理成功才提交，保证消息被消费到，没有处理成功的消息会继续消费，直到成功为止</p><blockquote><p>缺点就是多次请求没有去重复处理</p></blockquote><h3 id="解决重复问题"><a href="#解决重复问题" class="headerlink" title="解决重复问题"></a>解决重复问题</h3><p>使用 redis或者静态 map,回调内容通过将内容的唯一属性值作为 key,存在则跳过，不会加入到队列中</p><blockquote><p>redis 的时候需要设置失效时间，具体按照你的业务来设置，例如回调大概就几秒钟以内，你可以设置成10秒已上将数据清除</p></blockquote>]]></content>
    
    <summary type="html">
    
      现在对接第三方接口很多情况都会有异步回调模块，微信支付、网易云信等都有，回调不仅是一次的，多次的情况如何避免多次重复调用问题呢？
    
    </summary>
    
      <category term="java" scheme="https://blog.jihuiweb.com/categories/java/"/>
    
    
      <category term="异步" scheme="https://blog.jihuiweb.com/tags/%E5%BC%82%E6%AD%A5/"/>
    
      <category term="回调" scheme="https://blog.jihuiweb.com/tags/%E5%9B%9E%E8%B0%83/"/>
    
  </entry>
  
  <entry>
    <title>ssh连接终端工具推荐</title>
    <link href="https://blog.jihuiweb.com/2020/02/25/category/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/jssh%E8%BF%9E%E6%8E%A5%E7%BB%88%E7%AB%AF%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    <id>https://blog.jihuiweb.com/2020/02/25/category/服务器运维/jssh连接终端工具推荐/</id>
    <published>2020-02-25T02:30:00.000Z</published>
    <updated>2021-09-04T06:14:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>这些年用了很多终端工具，xshell、finalshell、shellcraft等等，不是收费就是有限制，不能多端同步<br><a id="more"></a></p><p>这里给大家推荐一款 <a href="https://www.termius.com/" target="_blank" rel="noopener">termius</a> 工具，非常强大，基本把那些工具的短板都克服了</p><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ul><li>免费</li><li>支持用户名密码和密钥模式</li><li>常用脚本片段（同时发送到多个主机）</li><li>全平台</li><li>云同步（注册一个账号即可）</li><li>分屏模式（看到有人提到，目前还没找到如何设置）</li></ul><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ul><li>Terminal（主题、配色、字体等）</li><li>Shotcuts（快捷键）</li><li>Known Hosts（主机地址管理）</li><li>Keychain（登录信息管理）</li><li>Profile（账号信息）</li></ul><h3 id="配置密钥"><a href="#配置密钥" class="headerlink" title="配置密钥"></a>配置密钥</h3><p>打开 [colorb]preferences/Keychain/new key (ADD IDENTITY是用户名密码模式）[/colorb]</p><blockquote><p>私钥在用户目录下的[colorg]/.ssh/id_rsa[/colorg]，然后将其内容全部复制粘贴到[colorr]Private key[/colorr]中。</p></blockquote><ul><li>Label（给该配置取个名字）</li><li>Passphrase（生成密钥时设置的密码，如果没有设置，此处不填）</li><li>Private key（私钥）</li><li>Public key（公钥，可以不填）</li></ul><h3 id="配置主机host"><a href="#配置主机host" class="headerlink" title="配置主机host"></a>配置主机host</h3><ul><li>Address（主机地址）</li><li>Port（主机端口，SSH默认为22）</li><li>Username（用于登录主机的用户名）</li><li>Password（密钥模式不需要填，点击右边的Keys-&gt;选择我们之前配置好的密钥）</li><li>Group（分组，可以以环境维度分组，也可以以业务维度分组，看自己习惯）</li><li>Start Snippet（登录后默认执行的脚本，可以在程序左侧的Snippet中添加）</li></ul>]]></content>
    
    <summary type="html">
    
      这些年用了很多终端工具，xshell、finalshell、shellcraft等等，不是收费就是有限制，不能多端同步
    
    </summary>
    
      <category term="服务器运维" scheme="https://blog.jihuiweb.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="jenkins" scheme="https://blog.jihuiweb.com/tags/jenkins/"/>
    
      <category term="pipeline" scheme="https://blog.jihuiweb.com/tags/pipeline/"/>
    
  </entry>
  
  <entry>
    <title>网易云信 im 如何保证在线状态准确？</title>
    <link href="https://blog.jihuiweb.com/2020/02/24/category/java/%E7%BD%91%E6%98%93%E4%BA%91%E4%BF%A1-im-%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E5%9C%A8%E7%BA%BF%E7%8A%B6%E6%80%81%E5%87%86%E7%A1%AE%EF%BC%9F/"/>
    <id>https://blog.jihuiweb.com/2020/02/24/category/java/网易云信-im-如何保证在线状态准确？/</id>
    <published>2020-02-24T07:36:58.000Z</published>
    <updated>2021-09-04T05:57:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>公司对接了网易云信 im，一堆毛病，特别是在线状态不准确，用户已经离线却没有及时更新状态<br><a id="more"></a></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><ol><li>由于网易没有给出状态查询的接口，可能考虑到很多情况导致状态查询数据量过大，没有给出这个接口</li><li>经过网易云信给出的 api，一方面通过网易云信回调的抄送进行用户在线状态更新，此时抄送可能丢失或延迟，另一方面则通过订阅用户的在线状态，判断用户在线情况，服务端通过用户最新登录时间和抄送的时间比对，大于最近登录时间才更新状态，否则忽略</li></ol><h3 id="api-接口"><a href="#api-接口" class="headerlink" title="api 接口"></a>api 接口</h3><p><a href="https://faq.yunxin.163.com/#KB0066" target="_blank" rel="noopener">关于在线状态事件订阅</a></p>]]></content>
    
    <summary type="html">
    
      公司对接了网易云信 im，一堆毛病，特别是在线状态不准确，用户已经离线却没有及时更新状态
    
    </summary>
    
      <category term="java" scheme="https://blog.jihuiweb.com/categories/java/"/>
    
    
      <category term="网易云信" scheme="https://blog.jihuiweb.com/tags/%E7%BD%91%E6%98%93%E4%BA%91%E4%BF%A1/"/>
    
      <category term="im" scheme="https://blog.jihuiweb.com/tags/im/"/>
    
  </entry>
  
  <entry>
    <title>solrcore is not available due to init failure: Error opening new searcher</title>
    <link href="https://blog.jihuiweb.com/2020/02/24/category/java/solrcore-is-not-available-due-to-init-failure-Error-opening-new-searcher/"/>
    <id>https://blog.jihuiweb.com/2020/02/24/category/java/solrcore-is-not-available-due-to-init-failure-Error-opening-new-searcher/</id>
    <published>2020-02-24T07:23:27.000Z</published>
    <updated>2021-09-04T06:03:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>服务器 solrt 突然挂了，查看solr控制面板和日志都报这个错误，没有做任何更新，<a href="https://sitecore.stackexchange.com/questions/19304/error-opening-new-searcher-core-is-missing-sitecore-analytics-index" target="_blank" rel="noopener">网上查阅资料解决</a><br><a id="more"></a></p><h3 id="原文"><a href="#原文" class="headerlink" title="原文"></a>原文</h3><p>From the feedback received from @Haneen Daoud, I have looked at my corrupted cores in slave Solr. I see all the folders for the corrupted cores are present and understood from the logs that one of the segments of index is corrupted because of 100% memory utilization happened which is because of few error logs.</p><p>I see conf, data folders and core.properties text file in the /var/Solr/data/Sitecore_analytics_index core. Data folder under path /var/Solr/data/Sitecore_analytics_index has the index folder and index.properties, replication.properties text files. I have deleted this data folder and restarted solr and this fixed the issue.</p><h3 id="翻译"><a href="#翻译" class="headerlink" title="翻译"></a>翻译</h3><p>找到你的 solr 节点目录，将目录 [colorb]data/index/[/colorb] 下面的所有删除，重启 solr 即可</p><p>[u]一开始网上查阅资料的时候，有人说只需要删除文件[colorg]data/index/write.lock[/colorg]，经过测试不行  [/u]</p>]]></content>
    
    <summary type="html">
    
      服务器 solrt 突然挂了，查看solr控制面板和日志都报这个错误，没有做任何更新，[网上查阅资料解决](https://sitecore.stackexchange.com/questions/19304/error-opening-new-searcher-core-is-missing-sitecore-analytics-index)
    
    </summary>
    
      <category term="java" scheme="https://blog.jihuiweb.com/categories/java/"/>
    
    
      <category term="solrcore" scheme="https://blog.jihuiweb.com/tags/solrcore/"/>
    
      <category term="failure" scheme="https://blog.jihuiweb.com/tags/failure/"/>
    
  </entry>
  
  <entry>
    <title>vsc golang环境搭建教程</title>
    <link href="https://blog.jihuiweb.com/2020/01/21/category/golang/vsc-golang%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/"/>
    <id>https://blog.jihuiweb.com/2020/01/21/category/golang/vsc-golang环境搭建教程/</id>
    <published>2020-01-21T02:38:07.000Z</published>
    <updated>2021-09-04T05:54:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>任何编程语言都需要一款 ide 工具，那么这里选择一款微软开源的 vs code<br><a id="more"></a></p><h3 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h3><blockquote><p>请自行安装 go环境知道 go env 能看到正常的信息，下载 vsc 软件，并安装go扩展 [u]Rich Go language support for Visual Studio Code[/u]</p></blockquote><p>任意创建一个 go 文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import (</span><br><span class="line">&quot;fmt&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">func main() &#123; // 声明 main 主函数</span><br><span class="line">fmt.Println(&quot;Hello World!&quot;) // 打印 Hello World!</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时 vsc 编辑器就会提示安装一些依赖,选择安装所有，如果由于谷歌被墙导致安装失败，那么此时就需要科学上网工具了，有些人已经翻墙了，但是还是下载失败，这是为何？因为终端没有代理。</p><h3 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h3><p>打开 vsc 设置 首选项-&gt;设置-&gt;应用程序-&gt;代理服务器-&gt;Proxy<br>输入你的代理地址，如果没有科学上网，那么可以选择别的代理网站</p><p>如果科学上网了，请查看自己的工具里的 http 代理设置的端口号 [colorg]<a href="http://127.0.0.1:1208[/colorg]，别看错了使用" target="_blank" rel="noopener">http://127.0.0.1:1208[/colorg]，别看错了使用</a> socket5的端口了。</p><p>推荐代理网站如下</p><ul><li><a href="https://goproxy.cn" target="_blank" rel="noopener">七牛云</a></li><li><a href="https://mirrors.aliyun.com/goproxy" target="_blank" rel="noopener">阿里云</a></li><li><a href="https://goproxy.io" target="_blank" rel="noopener">推荐</a></li><li><a href="https://gomirrors.org" target="_blank" rel="noopener">go sdk</a></li></ul><h3 id="环境设置"><a href="#环境设置" class="headerlink" title="环境设置"></a>环境设置</h3><p>vsc 设置 首选项-&gt;设置-&gt;扩展-&gt; go configuration-&gt;编辑 settings.json文件<br>将 go env 里的这两个目录设置进去<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">    　　　　&quot;go.goroot&quot;: &quot;&quot;,</span><br><span class="line">    　　　　&quot;go.gopath&quot;: &quot;&quot;,</span><br></pre></td></tr></table></figure></p><h3 id="调试运行"><a href="#调试运行" class="headerlink" title="调试运行"></a>调试运行</h3><p>按 F5调试看看是否能够正常运行，有问题继续往下看</p><p>问题1:[colorr]go: cannot find main module; see ‘go help modules’[/colorr]<br>需要在根目录创建一个 go.mod 文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go init go.mod</span><br></pre></td></tr></table></figure><p>问题2:[colorr]go: cannot determine module path for source directory /Users/liujiaxian/go (outside GOPATH, no import comments)[/colorr]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go mod init github.com/jiajunhuang/hello</span><br></pre></td></tr></table></figure><p>问题3:[colorr]$GOPATH/go.mod exists but should not[/colorr]<br>把项目放到了 gopath 目录下了，应该移到别的地方去，就可以了</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p>我也是刚学的小白，有人和我一样踩坑，希望看到可以少走一些弯路，谢谢！</p></blockquote>]]></content>
    
    <summary type="html">
    
      任何编程语言都需要一款 ide 工具，那么这里选择一款微软开源的 vs code
    
    </summary>
    
      <category term="golang" scheme="https://blog.jihuiweb.com/categories/golang/"/>
    
    
      <category term="环境搭建" scheme="https://blog.jihuiweb.com/tags/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
      <category term="教程" scheme="https://blog.jihuiweb.com/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>web 日志浏览面板log.io</title>
    <link href="https://blog.jihuiweb.com/2019/12/31/category/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/web%20%E6%97%A5%E5%BF%97%E6%B5%8F%E8%A7%88%E9%9D%A2%E6%9D%BF(log-io)/"/>
    <id>https://blog.jihuiweb.com/2019/12/31/category/服务器运维/web 日志浏览面板(log-io)/</id>
    <published>2019-12-31T07:05:00.000Z</published>
    <updated>2021-09-04T06:16:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>tomcat 日志查看很头疼，特别是多个的时候，每次得打开终端来回的敲命令，效率比较低，那么有没有一款日志管理平台，直接 web 端可以对日志进行管理的工具，今天找了很多，有一款勉强可用，就是log.io<br><a id="more"></a></p><p><a href="http://logio.org/" target="_blank" rel="noopener">log.io</a></p><h3 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h3><h4 id="安装log-io"><a href="#安装log-io" class="headerlink" title="安装log.io"></a>安装log.io</h4><blockquote><p>需要提前安装nodejs,版本太低会安装失败，亲测11.6.0成功安装</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g log.io --user &quot;root&quot;</span><br></pre></td></tr></table></figure><h4 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/NarrativeScience/Log.io.git</span><br></pre></td></tr></table></figure><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><p>此[colorg]~/.log.io/[/colorg]目录下有三个配置文件分别是[colorg] log_server.conf [/colorg]、[colorg]harvester.conf[/colorg]、[colorg] web_server.conf[/colorg]</p><h5 id="log-server-conf-服务端地址和端口"><a href="#log-server-conf-服务端地址和端口" class="headerlink" title="log_server.conf 服务端地址和端口"></a>log_server.conf 服务端地址和端口</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">exports.config = &#123;</span><br><span class="line">  host: &apos;0.0.0.0&apos;,</span><br><span class="line">  port: 28777</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="harvester-conf-客户端配置节点日志信息，并且指定服务端的地址和端口"><a href="#harvester-conf-客户端配置节点日志信息，并且指定服务端的地址和端口" class="headerlink" title="harvester.conf 客户端配置节点日志信息，并且指定服务端的地址和端口"></a>harvester.conf 客户端配置节点日志信息，并且指定服务端的地址和端口</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.log.io/harvester.conf</span><br><span class="line"></span><br><span class="line">exports.config = &#123;</span><br><span class="line">    nodeName: &quot;application_server&quot;,  #[colorr]节点名称[/colorr]</span><br><span class="line">    logStreams: &#123;              </span><br><span class="line">      apache: [                                         #[colorr]项目名称[/colorr]</span><br><span class="line">        &quot;/var/log/apache2/access.log&quot;,  #[colorr]日志路径[/colorr]</span><br><span class="line">        &quot;/var/log/apache2/error.log&quot;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    server: &#123;</span><br><span class="line">      host: &apos;0.0.0.0&apos;,</span><br><span class="line">      port: 28777</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h5 id="web-server-conf-日志-web-端信息配置"><a href="#web-server-conf-日志-web-端信息配置" class="headerlink" title="web_server.conf 日志 web 端信息配置"></a>web_server.conf 日志 web 端信息配置</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">exports.config = &#123;</span><br><span class="line">  host: &apos;127.0.0.1&apos;,</span><br><span class="line">  port: 11111,</span><br><span class="line">  /*</span><br><span class="line">  // Enable HTTP Basic Authentication</span><br><span class="line">  auth: &#123;</span><br><span class="line">    user: &quot;admin&quot;,</span><br><span class="line">    pass: &quot;123456&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  */</span><br><span class="line">  /*</span><br><span class="line">  // Enable HTTPS/SSL</span><br><span class="line">  ssl: &#123;</span><br><span class="line">    key: &apos;/path/to/privatekey.pem&apos;,</span><br><span class="line">    cert: &apos;/path/to/certificate.pem&apos;</span><br><span class="line">  &#125;,</span><br><span class="line">  */</span><br><span class="line">  /*</span><br><span class="line">  // Restrict access to websocket (socket.io)</span><br><span class="line">  // Uses socket.io &apos;origins&apos; syntax</span><br><span class="line">  restrictSocket: &apos;*:*&apos;,</span><br><span class="line">  */</span><br><span class="line">  /*</span><br><span class="line">  // Restrict access to http server (express)</span><br><span class="line">  restrictHTTP: [</span><br><span class="line">    &quot;192.168.29.39&quot;,</span><br><span class="line">    &quot;10.0.*&quot;</span><br><span class="line">  ]</span><br><span class="line">  */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="开启服务"><a href="#开启服务" class="headerlink" title="开启服务"></a>开启服务</h3><h4 id="先开启服务端"><a href="#先开启服务端" class="headerlink" title="先开启服务端"></a>先开启服务端</h4><p>项目 bin 目录下执行 [colorb]log.io-server[/colorb]</p><h4 id="再开启客户端"><a href="#再开启客户端" class="headerlink" title="再开启客户端"></a>再开启客户端</h4><p>项目 bin 目录下执行 [colorb]log.io-harvester[/colorb]</p><h4 id="访问地址-colort-127-0-0-1-11111-colort"><a href="#访问地址-colort-127-0-0-1-11111-colort" class="headerlink" title="访问地址 [colort]127.0.0.1:11111[/colort]"></a>访问地址 [colort]127.0.0.1:11111[/colort]</h4><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p>感觉没有存到数据库，如果有入库的话就更好了，那么就可以查看以往的数据日志了，还能对库中数据进行分词搜索，可能实现起来会有瓶颈吧。</p></blockquote>]]></content>
    
    <summary type="html">
    
      tomcat 日志查看很头疼，特别是多个的时候，每次得打开终端来回的敲命令，效率比较低，那么有没有一款日志管理平台，直接 web 端可以对日志进行管理的工具，今天找了很多，有一款勉强可用，就是log.io
    
    </summary>
    
      <category term="服务器运维" scheme="https://blog.jihuiweb.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="日志" scheme="https://blog.jihuiweb.com/tags/%E6%97%A5%E5%BF%97/"/>
    
      <category term="web" scheme="https://blog.jihuiweb.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>安装docker-compose失败</title>
    <link href="https://blog.jihuiweb.com/2019/12/28/category/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/%E5%AE%89%E8%A3%85docker-compose%E5%A4%B1%E8%B4%A5/"/>
    <id>https://blog.jihuiweb.com/2019/12/28/category/服务器运维/安装docker-compose失败/</id>
    <published>2019-12-28T08:13:00.000Z</published>
    <updated>2021-09-04T06:18:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>系统 CentOS 7.6 64bit with ARM 内核 4.14.0-115.5.1.el7a.aarch64<br><a id="more"></a></p><h3 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://github.com/docker/compose/releases/download/1.24.1/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure><h3 id="错误提示"><a href="#错误提示" class="headerlink" title="错误提示"></a>错误提示</h3><p>[colorr]/usr/local/bin/docker-compose: line 1: Not: command not found[/colorr]</p><h3 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install epel-release</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install python-pip</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure><h3 id="错误提示-1"><a href="#错误提示-1" class="headerlink" title="错误提示"></a>错误提示</h3><p>DEPRECATION: Python 2.7 will reach the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 won’t be maintained after that date. A future version of pip will drop support for Python 2.7. More details about Python 2 support in pip, can be found at <a href="https://pip.pypa.io/en/latest/development/release-process/#python-2-support" target="_blank" rel="noopener">https://pip.pypa.io/en/latest/development/release-process/#python-2-support</a><br>Collecting docker-compose<br>  Using cached <a href="https://files.pythonhosted.org/packages/2e/93/b8fb6532487fcc40f5c607ac428a609e7f74bfb26a1c3c980a253c6e5a14/docker_compose-1.25.0-py2.py3-none-any.whl" target="_blank" rel="noopener">https://files.pythonhosted.org/packages/2e/93/b8fb6532487fcc40f5c607ac428a609e7f74bfb26a1c3c980a253c6e5a14/docker_compose-1.25.0-py2.py3-none-any.whl</a><br>Collecting docker[ssh]&lt;5,&gt;=3.7.0<br>  Using cached <a href="https://files.pythonhosted.org/packages/cc/ca/699d4754a932787ef353a157ada74efd1ceb6d1fc0bfb7989ae1e7b33111/docker-4.1.0-py2.py3-none-any.whl" target="_blank" rel="noopener">https://files.pythonhosted.org/packages/cc/ca/699d4754a932787ef353a157ada74efd1ceb6d1fc0bfb7989ae1e7b33111/docker-4.1.0-py2.py3-none-any.whl</a><br>Collecting backports.shutil-get-terminal-size==1.0.0; python_version &lt; “3.3”<br>  Using cached <a href="https://files.pythonhosted.org/packages/7d/cd/1750d6c35fe86d35f8562091737907f234b78fdffab42b29c72b1dd861f4/backports.shutil_get_terminal_size-1.0.0-py2.py3-none-any.whl" target="_blank" rel="noopener">https://files.pythonhosted.org/packages/7d/cd/1750d6c35fe86d35f8562091737907f234b78fdffab42b29c72b1dd861f4/backports.shutil_get_terminal_size-1.0.0-py2.py3-none-any.whl</a><br>Collecting docopt&lt;1,&gt;=0.6.1<br>  Using cached <a href="https://files.pythonhosted.org/packages/a2/55/8f8cab2afd404cf578136ef2cc5dfb50baa1761b68c9da1fb1e4eed343c9/docopt-0.6.2.tar.gz" target="_blank" rel="noopener">https://files.pythonhosted.org/packages/a2/55/8f8cab2afd404cf578136ef2cc5dfb50baa1761b68c9da1fb1e4eed343c9/docopt-0.6.2.tar.gz</a><br>Requirement already satisfied: six&lt;2,&gt;=1.3.0 in /usr/lib/python2.7/site-packages (from docker-compose) (1.10.0)<br>Requirement already satisfied: requests&lt;3,&gt;=2.20.0 in /usr/lib/python2.7/site-packages (from docker-compose) (2.22.0)<br>Collecting dockerpty&lt;1,&gt;=0.4.1<br>  Using cached <a href="https://files.pythonhosted.org/packages/8d/ee/e9ecce4c32204a6738e0a5d5883d3413794d7498fe8b06f44becc028d3ba/dockerpty-0.4.1.tar.gz" target="_blank" rel="noopener">https://files.pythonhosted.org/packages/8d/ee/e9ecce4c32204a6738e0a5d5883d3413794d7498fe8b06f44becc028d3ba/dockerpty-0.4.1.tar.gz</a><br>Collecting websocket-client&lt;1,&gt;=0.32.0<br>  Using cached <a href="https://files.pythonhosted.org/packages/29/19/44753eab1fdb50770ac69605527e8859468f3c0fd7dc5a76dd9c4dbd7906/websocket_client-0.56.0-py2.py3-none-any.whl" target="_blank" rel="noopener">https://files.pythonhosted.org/packages/29/19/44753eab1fdb50770ac69605527e8859468f3c0fd7dc5a76dd9c4dbd7906/websocket_client-0.56.0-py2.py3-none-any.whl</a><br>Collecting texttable&lt;2,&gt;=0.9.0<br>  Using cached <a href="https://files.pythonhosted.org/packages/82/a8/60df592e3a100a1f83928795aca210414d72cebdc6e4e0c95a6d8ac632fe/texttable-1.6.2.tar.gz" target="_blank" rel="noopener">https://files.pythonhosted.org/packages/82/a8/60df592e3a100a1f83928795aca210414d72cebdc6e4e0c95a6d8ac632fe/texttable-1.6.2.tar.gz</a><br>Requirement already satisfied: ipaddress&lt;2,&gt;=1.0.16; python_version &lt; “3.3” in /usr/lib/python2.7/site-packages (from docker-compose) (1.0.16)<br>Collecting cached-property&lt;2,&gt;=1.2.0<br>  Using cached <a href="https://files.pythonhosted.org/packages/3b/86/85c1be2e8db9e13ef9a350aecd6dea292bd612fa288c2f40d035bb750ded/cached_property-1.5.1-py2.py3-none-any.whl" target="_blank" rel="noopener">https://files.pythonhosted.org/packages/3b/86/85c1be2e8db9e13ef9a350aecd6dea292bd612fa288c2f40d035bb750ded/cached_property-1.5.1-py2.py3-none-any.whl</a><br>Collecting subprocess32&lt;4,&gt;=3.5.4; python_version &lt; “3.2”<br>  Using cached <a href="https://files.pythonhosted.org/packages/32/c8/564be4d12629b912ea431f1a50eb8b3b9d00f1a0b1ceff17f266be190007/subprocess32-3.5.4.tar.gz" target="_blank" rel="noopener">https://files.pythonhosted.org/packages/32/c8/564be4d12629b912ea431f1a50eb8b3b9d00f1a0b1ceff17f266be190007/subprocess32-3.5.4.tar.gz</a><br>Collecting enum34&lt;2,&gt;=1.0.4; python_version &lt; “3.4”<br>  Using cached <a href="https://files.pythonhosted.org/packages/c5/db/e56e6b4bbac7c4a06de1c50de6fe1ef3810018ae11732a50f15f62c7d050/enum34-1.1.6-py2-none-any.whl" target="_blank" rel="noopener">https://files.pythonhosted.org/packages/c5/db/e56e6b4bbac7c4a06de1c50de6fe1ef3810018ae11732a50f15f62c7d050/enum34-1.1.6-py2-none-any.whl</a><br>Requirement already satisfied: backports.ssl-match-hostname&lt;4,&gt;=3.5; python_version &lt; “3.5” in /usr/lib/python2.7/site-packages (from docker-compose) (3.5.0.1)<br>Requirement already satisfied: PyYAML&lt;5,&gt;=3.10 in /usr/lib64/python2.7/site-packages (from docker-compose) (3.12)<br>Collecting jsonschema&lt;4,&gt;=2.5.1<br>  Using cached <a href="https://files.pythonhosted.org/packages/c5/8f/51e89ce52a085483359217bc72cdbf6e75ee595d5b1d4b5ade40c7e018b8/jsonschema-3.2.0-py2.py3-none-any.whl" target="_blank" rel="noopener">https://files.pythonhosted.org/packages/c5/8f/51e89ce52a085483359217bc72cdbf6e75ee595d5b1d4b5ade40c7e018b8/jsonschema-3.2.0-py2.py3-none-any.whl</a><br>Collecting paramiko&gt;=2.4.2; extra == “ssh”<br>  Using cached <a href="https://files.pythonhosted.org/packages/4b/80/74dace9e48b0ef923633dfb5e48798f58a168e4734bca8ecfaf839ba051a/paramiko-2.6.0-py2.py3-none-any.whl" target="_blank" rel="noopener">https://files.pythonhosted.org/packages/4b/80/74dace9e48b0ef923633dfb5e48798f58a168e4734bca8ecfaf839ba051a/paramiko-2.6.0-py2.py3-none-any.whl</a><br>Requirement already satisfied: certifi&gt;=2017.4.17 in /usr/lib/python2.7/site-packages (from requests&lt;3,&gt;=2.20.0-&gt;docker-compose) (2019.9.11)<br>Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,&lt;1.26,&gt;=1.21.1 in /usr/lib/python2.7/site-packages (from requests&lt;3,&gt;=2.20.0-&gt;docker-compose) (1.25.7)<br>Requirement already satisfied: idna&lt;2.9,&gt;=2.5 in /usr/lib/python2.7/site-packages (from requests&lt;3,&gt;=2.20.0-&gt;docker-compose) (2.8)<br>Requirement already satisfied: chardet&lt;3.1.0,&gt;=3.0.2 in /usr/lib/python2.7/site-packages (from requests&lt;3,&gt;=2.20.0-&gt;docker-compose) (3.0.4)<br>Collecting attrs&gt;=17.4.0<br>  Using cached <a href="https://files.pythonhosted.org/packages/a2/db/4313ab3be961f7a763066401fb77f7748373b6094076ae2bda2806988af6/attrs-19.3.0-py2.py3-none-any.whl" target="_blank" rel="noopener">https://files.pythonhosted.org/packages/a2/db/4313ab3be961f7a763066401fb77f7748373b6094076ae2bda2806988af6/attrs-19.3.0-py2.py3-none-any.whl</a><br>Requirement already satisfied: setuptools in /usr/lib/python2.7/site-packages/setuptools-19.6.2-py2.7.egg (from jsonschema&lt;4,&gt;=2.5.1-&gt;docker-compose) (19.6.2)<br>Collecting pyrsistent&gt;=0.14.0<br>  Using cached <a href="https://files.pythonhosted.org/packages/6c/6f/c1a2e8da80a0029f6b618d7e20e1a6f2a61dd04e2e54225309c2cc4268f7/pyrsistent-0.15.6.tar.gz" target="_blank" rel="noopener">https://files.pythonhosted.org/packages/6c/6f/c1a2e8da80a0029f6b618d7e20e1a6f2a61dd04e2e54225309c2cc4268f7/pyrsistent-0.15.6.tar.gz</a><br>Collecting importlib-metadata; python_version &lt; “3.8”<br>  Using cached <a href="https://files.pythonhosted.org/packages/f6/d2/40b3fa882147719744e6aa50ac39cf7a22a913cbcba86a0371176c425a3b/importlib_metadata-0.23-py2.py3-none-any.whl" target="_blank" rel="noopener">https://files.pythonhosted.org/packages/f6/d2/40b3fa882147719744e6aa50ac39cf7a22a913cbcba86a0371176c425a3b/importlib_metadata-0.23-py2.py3-none-any.whl</a><br>Collecting functools32; python_version &lt; “3”<br>  Using cached <a href="https://files.pythonhosted.org/packages/c5/60/6ac26ad05857c601308d8fb9e87fa36d0ebf889423f47c3502ef034365db/functools32-3.2.3-2.tar.gz" target="_blank" rel="noopener">https://files.pythonhosted.org/packages/c5/60/6ac26ad05857c601308d8fb9e87fa36d0ebf889423f47c3502ef034365db/functools32-3.2.3-2.tar.gz</a><br>Collecting bcrypt&gt;=3.1.3<br>  Using cached <a href="https://files.pythonhosted.org/packages/fa/aa/025a3ab62469b5167bc397837c9ffc486c42a97ef12ceaa6699d8f5a5416/bcrypt-3.1.7.tar.gz" target="_blank" rel="noopener">https://files.pythonhosted.org/packages/fa/aa/025a3ab62469b5167bc397837c9ffc486c42a97ef12ceaa6699d8f5a5416/bcrypt-3.1.7.tar.gz</a><br>  Installing build dependencies … done<br>  Getting requirements to build wheel … done<br>[colorr]<br>ERROR: Exception:<br>Traceback (most recent call last):<br>  File “/usr/lib/python2.7/site-packages/pip/_internal/cli/base_command.py”, line 153, in _main<br>    status = self.run(options, args)<br>  File “/usr/lib/python2.7/site-packages/pip/_internal/commands/install.py”, line 382, in run<br>    resolver.resolve(requirement_set)<br>  File “/usr/lib/python2.7/site-packages/pip/_internal/legacy_resolve.py”, line 201, in resolve<br>    self._resolve_one(requirement_set, req)<br>  File “/usr/lib/python2.7/site-packages/pip/_internal/legacy_resolve.py”, line 365, in _resolve_one<br>    abstract_dist = self._get_abstract_dist_for(req_to_install)<br>  File “/usr/lib/python2.7/site-packages/pip/_internal/legacy_resolve.py”, line 313, in _get_abstract_dist_for<br>    req, self.session, self.finder, self.require_hashes<br>  File “/usr/lib/python2.7/site-packages/pip/_internal/operations/prepare.py”, line 224, in prepare_linked_requirement<br>    req, self.req_tracker, finder, self.build_isolation,<br>  File “/usr/lib/python2.7/site-packages/pip/_internal/operations/prepare.py”, line 49, in _get_prepared_distribution<br>    abstract_dist.prepare_distribution_metadata(finder, build_isolation)<br>  File “/usr/lib/python2.7/site-packages/pip/_internal/distributions/source/legacy.py”, line 37, in prepare_distribution_metadata<br>    self._setup_isolation(finder)<br>  File “/usr/lib/python2.7/site-packages/pip/_internal/distributions/source/legacy.py”, line 90, in _setup_isolation<br>    reqs = backend.get_requires_for_build_wheel()<br>  File “/usr/lib/python2.7/site-packages/pip/_vendor/pep517/wrappers.py”, line 152, in get_requires_for_build_wheel<br>    ‘config_settings’: config_settings<br>  File “/usr/lib/python2.7/site-packages/pip/_vendor/pep517/wrappers.py”, line 255, in _call_hook<br>    raise BackendUnavailable(data.get(‘traceback’, ‘’))<br>BackendUnavailable<br>[/colorr]</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>[colory]暂未研究出来解决方案，敬请期待，如果有大神遇过，麻烦留下足迹，谢谢！[/colory]</p><p>[colorg]<strong>经过一番查阅资料终于找到问题的原因了</strong>[/colorg]</p><h3 id="方式一安装"><a href="#方式一安装" class="headerlink" title="方式一安装"></a>方式一安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/docker/compose/releases/download/1.24.1/docker-compose-`uname -s`-`uname -m`</span><br></pre></td></tr></table></figure><p>uname -s = linux</p><p>uname -m = aarch64</p><p>所以这个连接指向的地址是 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/docker/compose/releases/download/1.24.1/docker-compose-linux-aarch64</span><br></pre></td></tr></table></figure><p>如果你去访问这个地址你会发现 404,所以下载下来的文件根本是错误的，导致安装不上</p><h4 id="正确安装方法如下"><a href="#正确安装方法如下" class="headerlink" title="正确安装方法如下"></a>正确安装方法如下</h4><ol><li>到<a href="https://github.com/docker/compose/releases" target="_blank" rel="noopener">https://github.com/docker/compose/releases</a> 中下载对应的版本</li><li>这里选择的是 1.23.2 的 docker-compose-Linux-x86_64</li><li>/home/download/docker-compose_1.23.2/ 目录</li><li>执行一下命令</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mv /home/download/docker-compose_1.23.2/docker-compose-Linux-x86_64 /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line">sudo chmod +x /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line">docker-compose version</span><br></pre></td></tr></table></figure><h3 id="方式二安装"><a href="#方式二安装" class="headerlink" title="方式二安装"></a>方式二安装</h3><blockquote><p>docker ,docker-compose 版本兼容性或者 python2.7的问题，安装太高版本报错所致</p></blockquote><h4 id="直接指定版本号"><a href="#直接指定版本号" class="headerlink" title="直接指定版本号"></a>直接指定版本号</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -U docker-compose==1.23.0</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      系统 CentOS 7.6 64bit with ARM 内核 4.14.0-115.5.1.el7a.aarch64
    
    </summary>
    
      <category term="服务器运维" scheme="https://blog.jihuiweb.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="docker-compose" scheme="https://blog.jihuiweb.com/tags/docker-compose/"/>
    
  </entry>
  
  <entry>
    <title>Golang和其他语言的差异</title>
    <link href="https://blog.jihuiweb.com/2019/12/16/category/golang/Golang%E5%92%8C%E5%85%B6%E4%BB%96%E8%AF%AD%E8%A8%80%E7%9A%84%E5%B7%AE%E5%BC%82/"/>
    <id>https://blog.jihuiweb.com/2019/12/16/category/golang/Golang和其他语言的差异/</id>
    <published>2019-12-16T03:58:39.000Z</published>
    <updated>2021-09-04T05:54:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文只要讲讲Golang和其他语言的，差异性，让你可以在其他中，可以快速切换到Golang中。Golang吸收了大量语言的特性，有pythone的简单开发，也解决了很多问题，至于为什么选择使用Golang，只要的PHP的局限性太大，JAVA太重。Pythone做数据分析，自己的能力不行。Docker是K8s，K3s都是又golang编写的，搞不好以后可以往架构的方面发展。<br><a id="more"></a></p><p>我们先看一下的代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">package main //包，表明代码所在的模块</span><br><span class="line"></span><br><span class="line">import (</span><br><span class="line">&quot;fmt&quot;</span><br><span class="line">&quot;os&quot;</span><br><span class="line">) //引入代码依赖包</span><br><span class="line"></span><br><span class="line">//功能实现</span><br><span class="line">func main() &#123;</span><br><span class="line">if len(os.Args) &gt; 0 &#123;</span><br><span class="line">fmt.Println(&quot;Hello World&quot;,os.Args[0])</span><br><span class="line">&#125;</span><br><span class="line">os.Exit(-1)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>可以见的Golang的一个基本组成结构。<br>需要一个<code>package</code>，<code>import</code>和其他语言没有多大区别，还需要一个主运用程序函数<code>func main</code></p><p>我们只需要注意<br>1.必须是main包：package main<br>2.必须是main方法：func main()<br>3.文件名不一定是main.go 很多教程都这么写导致很多人以为这个是必要的入口文件</p><p>退出返回值<br>与其他主要的编程语言的差异<br>Go中mian函数不支持任何返回值<br>通过os.Exit来返回状态</p><p>获取命令行参数<br>与其他主要的编程语言的差异<br>mian 函数不支持传入参数 比如func main(arg [] string)<br>在程序中直接通过os.Args获取命令行参数</p><p>由于为了方便一些代码都用Test的方式来实现。<br>编写测试程序<br>1.源码文件以_test结尾：xxx_test.go<br>2.测试方法名以Test开头:func TestXXX(t *testing.T) {…}</p><p>路径为 src/ch2/fib<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">package fib</span><br><span class="line"></span><br><span class="line">import (</span><br><span class="line">&quot;testing&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">func TestFibList(t *testing.T) &#123;</span><br><span class="line">var (</span><br><span class="line">a int = 1</span><br><span class="line">b int = 1</span><br><span class="line">)</span><br><span class="line">t.Log(a)</span><br><span class="line">for i := 0; i &lt; 5; i++ &#123;</span><br><span class="line">t.Log(&quot; &quot;, b)</span><br><span class="line">tmp := a</span><br><span class="line">a = b</span><br><span class="line">b = a + tmp</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func TestExchange(t *testing.T) &#123;</span><br><span class="line">a := 1</span><br><span class="line">b := 2</span><br><span class="line">a, b = b, a</span><br><span class="line">t.Log(a, b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这里注意的是<br>= 是赋值， := 是声明变量并赋值。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// = 使用必须使用先var声明例如：</span><br><span class="line">var a</span><br><span class="line">a=100</span><br><span class="line">//或</span><br><span class="line">var b = 100</span><br><span class="line">//或</span><br><span class="line">var c int = 100</span><br><span class="line"></span><br><span class="line">// := 是声明并赋值，并且系统自动推断类型，不需要var关键字</span><br><span class="line">d := 100</span><br></pre></td></tr></table></figure></p><p>变量赋值<br>与其他主要的编程语言<br>赋值可以进行自动类型推断<br>在一个赋值语句中可以对多个变量进行同时赋值</p><p>常亮定义<br>与其他主要的编程语言<br>快速设置连续值<br>const (<br>    Monday = iota + 1<br>    Tuesday<br>    Wednesday<br>)</p><p>const (<br>  Open = 1 &lt;&lt; iota<br>  Close<br>  Pending<br>)</p><p>数据类型有如下</p><p>bool<br>string<br>int int8 int16 int32 int64<br>uint uint8 uint16 uint32 uint64 uintptr<br>byte<br>run3<br>float32 float64<br>complex64 complex128</p><h3 id="Golang的类型转换"><a href="#Golang的类型转换" class="headerlink" title="Golang的类型转换"></a>Golang的类型转换</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">package type_test</span><br><span class="line"></span><br><span class="line">import &quot;testing&quot;</span><br><span class="line"></span><br><span class="line">type MyInt int64</span><br><span class="line"></span><br><span class="line">func TestImplicit(t *testing.T) &#123;</span><br><span class="line">var a int32 = 1</span><br><span class="line">var b int64</span><br><span class="line">b = int64(a)</span><br><span class="line">var c MyInt</span><br><span class="line">c = MyInt(b) //go比较严格别名也是不支持</span><br><span class="line">t.Log(a, b, c)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">指针类型</span><br><span class="line"></span><br><span class="line">不支持指针运算</span><br><span class="line">string时值类型，其默认的初始化值为空字符串，而不是 nil</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">func TestPoint(t *testing.T) &#123;</span><br><span class="line">a := 1</span><br><span class="line">aPtr := &amp;a</span><br><span class="line">t.Log(a, aPtr)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      本文只要讲讲Golang和其他语言的，差异性，让你可以在其他中，可以快速切换到Golang中。Golang吸收了大量语言的特性，有pythone的简单开发，也解决了很多问题，至于为什么选择使用Golang，只要的PHP的局限性太大，JAVA太重。Pythone做数据分析，自己的能力不行。Docker是K8s，K3s都是又golang编写的，搞不好以后可以往架构的方面发展。
    
    </summary>
    
      <category term="golang" scheme="https://blog.jihuiweb.com/categories/golang/"/>
    
    
      <category term="差异" scheme="https://blog.jihuiweb.com/tags/%E5%B7%AE%E5%BC%82/"/>
    
      <category term="语言" scheme="https://blog.jihuiweb.com/tags/%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>java.lang.NoClassDefFoundError: com/blade/Blade</title>
    <link href="https://blog.jihuiweb.com/2019/12/13/category/java/java-lang-NoClassDefFoundError-com-blade-Blade/"/>
    <id>https://blog.jihuiweb.com/2019/12/13/category/java/java-lang-NoClassDefFoundError-com-blade-Blade/</id>
    <published>2019-12-13T09:55:04.000Z</published>
    <updated>2021-09-04T05:59:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>下载了一个 blade 项目进行开发，开发完毕后，上线发现一直报错，查阅资料几乎没有此类问题，最后才发现是打的包不能和平常 springboot 的项目一样，直接使用 idea install,然后 JAVA -jar 执行<br><a id="more"></a></p><h3 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Exception in thread &quot;main&quot; java.lang.NoClassDefFoundError: com/blade/Blade</span><br><span class="line">at com.tale.Application.main(Application.java:15)</span><br><span class="line">Caused by: java.lang.ClassNotFoundException: com.blade.Blade</span><br><span class="line">at java.net.URLClassLoader.findClass(URLClassLoader.java:381)</span><br><span class="line">at java.lang.ClassLoader.loadClass(ClassLoader.java:424)</span><br><span class="line">at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)</span><br><span class="line">at java.lang.ClassLoader.loadClass(ClassLoader.java:357)</span><br><span class="line">... 1 more</span><br></pre></td></tr></table></figure><blockquote><p>解压 jar 包发现文件夹内的文件非常的少，期间尝试将 idea 执行产生的文件直接上传 tomcat，最后也是以失败收尾</p></blockquote><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>通过对比项目 <a href="https://github.com/otale/tale" target="_blank" rel="noopener">tale</a> 发现打包方式不一样，然后修改即可</p><h4 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;plugins&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;source&gt;1.8&lt;/source&gt;</span><br><span class="line">                    &lt;target&gt;1.8&lt;/target&gt;</span><br><span class="line">                    &lt;encoding&gt;UTF-8&lt;/encoding&gt;</span><br><span class="line">                &lt;/configuration&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;appendAssemblyId&gt;false&lt;/appendAssemblyId&gt;</span><br><span class="line">                    &lt;descriptors&gt;</span><br><span class="line">                        &lt;descriptor&gt;assembly.xml&lt;/descriptor&gt;</span><br><span class="line">                    &lt;/descriptors&gt;</span><br><span class="line">                    &lt;outputDirectory&gt;$&#123;project.build.directory&#125;/dist/&lt;/outputDirectory&gt;</span><br><span class="line">                &lt;/configuration&gt;</span><br><span class="line">                &lt;executions&gt;</span><br><span class="line">                    &lt;execution&gt;</span><br><span class="line">                        &lt;id&gt;make-assembly&lt;/id&gt;</span><br><span class="line">                        &lt;phase&gt;package&lt;/phase&gt;</span><br><span class="line">                        &lt;goals&gt;</span><br><span class="line">                            &lt;goal&gt;single&lt;/goal&gt;</span><br><span class="line">                        &lt;/goals&gt;</span><br><span class="line">                    &lt;/execution&gt;</span><br><span class="line">                &lt;/executions&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;2.4&lt;/version&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;archive&gt;</span><br><span class="line">                        &lt;manifest&gt;</span><br><span class="line">                            &lt;mainClass&gt;com.sp.Application&lt;/mainClass&gt;</span><br><span class="line">                            &lt;classpathPrefix&gt;lib/&lt;/classpathPrefix&gt;</span><br><span class="line">                            &lt;addClasspath&gt;true&lt;/addClasspath&gt;</span><br><span class="line">                        &lt;/manifest&gt;</span><br><span class="line">                        &lt;manifestEntries&gt;</span><br><span class="line">                            &lt;Class-Path&gt;resources/&lt;/Class-Path&gt;</span><br><span class="line">                        &lt;/manifestEntries&gt;</span><br><span class="line">                    &lt;/archive&gt;</span><br><span class="line">                &lt;/configuration&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">        &lt;/plugins&gt;</span><br></pre></td></tr></table></figure><h4 id="assembly-xml"><a href="#assembly-xml" class="headerlink" title="assembly.xml"></a>assembly.xml</h4><p>[colory]与 pom.xml 同一级[/colory]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;assembly xmlns=&quot;http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2&quot;</span><br><span class="line">          xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">          xsi:schemaLocation=&quot;http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 http://maven.apache.org/xsd/assembly-1.1.2.xsd&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;id&gt;bin&lt;/id&gt;</span><br><span class="line">    &lt;formats&gt;</span><br><span class="line">        &lt;format&gt;tar.gz&lt;/format&gt;</span><br><span class="line">        &lt;format&gt;zip&lt;/format&gt;</span><br><span class="line">    &lt;/formats&gt;</span><br><span class="line"></span><br><span class="line">    &lt;includeBaseDirectory&gt;false&lt;/includeBaseDirectory&gt;</span><br><span class="line"></span><br><span class="line">    &lt;fileSets&gt;</span><br><span class="line">        &lt;fileSet&gt;</span><br><span class="line">            &lt;directory&gt;src/main/resources/&lt;/directory&gt;</span><br><span class="line">            &lt;outputDirectory&gt;/resources&lt;/outputDirectory&gt;</span><br><span class="line">        &lt;/fileSet&gt;</span><br><span class="line">        &lt;fileSet&gt;</span><br><span class="line">            &lt;directory&gt;src/main/plugins/&lt;/directory&gt;</span><br><span class="line">            &lt;outputDirectory&gt;/plugins&lt;/outputDirectory&gt;</span><br><span class="line">        &lt;/fileSet&gt;</span><br><span class="line">        &lt;fileSet&gt;</span><br><span class="line">            &lt;directory&gt;bin/&lt;/directory&gt;</span><br><span class="line">            &lt;outputDirectory&gt;/&lt;/outputDirectory&gt;</span><br><span class="line">        &lt;/fileSet&gt;</span><br><span class="line">    &lt;/fileSets&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependencySets&gt;</span><br><span class="line">        &lt;dependencySet&gt;</span><br><span class="line">            &lt;outputDirectory&gt;/lib&lt;/outputDirectory&gt;</span><br><span class="line">            &lt;scope&gt;runtime&lt;/scope&gt;</span><br><span class="line">            &lt;excludes&gt;</span><br><span class="line">                &lt;exclude&gt;$&#123;project.groupId&#125;:$&#123;project.artifactId&#125;&lt;/exclude&gt;</span><br><span class="line">            &lt;/excludes&gt;</span><br><span class="line">        &lt;/dependencySet&gt;</span><br><span class="line">        &lt;dependencySet&gt;</span><br><span class="line">            &lt;outputDirectory&gt;/&lt;/outputDirectory&gt;</span><br><span class="line">            &lt;includes&gt;</span><br><span class="line">                &lt;include&gt;$&#123;project.groupId&#125;:$&#123;project.artifactId&#125;&lt;/include&gt;</span><br><span class="line">            &lt;/includes&gt;</span><br><span class="line">        &lt;/dependencySet&gt;</span><br><span class="line">    &lt;/dependencySets&gt;</span><br><span class="line">&lt;/assembly&gt;</span><br></pre></td></tr></table></figure><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><ol><li>在target 目录下的 dist 文件下有两个文件，解压 tar.gz 文件</li><li>执行以下命令<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup java -jar ***.jar &amp;</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>到此查看日志 nohup 可以看到启动成功的日志</p></blockquote>]]></content>
    
    <summary type="html">
    
      下载了一个 blade 项目进行开发，开发完毕后，上线发现一直报错，查阅资料几乎没有此类问题，最后才发现是打的包不能和平常 springboot 的项目一样，直接使用 idea install,然后 JAVA -jar 执行
    
    </summary>
    
      <category term="java" scheme="https://blog.jihuiweb.com/categories/java/"/>
    
    
      <category term="NoClassDefFoundError" scheme="https://blog.jihuiweb.com/tags/NoClassDefFoundError/"/>
    
      <category term="Blade" scheme="https://blog.jihuiweb.com/tags/Blade/"/>
    
  </entry>
  
  <entry>
    <title>@QueryParam Float 接收不到值的问题</title>
    <link href="https://blog.jihuiweb.com/2019/12/04/category/java/QueryParam-Float-%E6%8E%A5%E6%94%B6%E4%B8%8D%E5%88%B0%E5%80%BC%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://blog.jihuiweb.com/2019/12/04/category/java/QueryParam-Float-接收不到值的问题/</id>
    <published>2019-12-04T09:20:39.000Z</published>
    <updated>2021-09-04T06:03:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>从网上下载了一个开源项目，然后发现 bug 太多，发现一个比较奇怪的问题，前端传值已经有值了，后端接收的时候只有一个 Float 的接收不到值<br><a id="more"></a></p><h3 id="前端代码"><a href="#前端代码" class="headerlink" title="前端代码"></a>前端代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">                type: &quot;PUT&quot;,</span><br><span class="line">                url: &quot;/admin/node/$&#123;node.id&#125;&quot;,</span><br><span class="line">                dataType: &quot;json&quot;,</span><br><span class="line">                data: &#123;</span><br><span class="line">                    name: $(&quot;#name&quot;).val(),</span><br><span class="line">                    server: $(&quot;#server&quot;).val(),</span><br><span class="line">                    method: $(&quot;#method&quot;).val(),</span><br><span class="line">                    custom_method: $(&quot;#custom_method&quot;).val(),</span><br><span class="line">                    traffic_rate: $(&quot;#rate&quot;).val(),</span><br><span class="line">                    info: $(&quot;#info&quot;).val(),</span><br><span class="line">                    type: $(&quot;#type&quot;).val(),</span><br><span class="line">                    status: $(&quot;#status&quot;).val(),</span><br><span class="line">                    sort: $(&quot;#sort&quot;).val()</span><br><span class="line">                &#125;,</span><br><span class="line">                success: function (data) &#123;</span><br><span class="line">                    if (data.ret) &#123;</span><br><span class="line">                        $(&quot;#msg-error&quot;).hide(100);</span><br><span class="line">                        $(&quot;#msg-success&quot;).show(100);</span><br><span class="line">                        $(&quot;#msg-success-p&quot;).html(data.msg);</span><br><span class="line">                        window.setTimeout(&quot;location.href=&apos;/admin/node&apos;&quot;, 2000);</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        $(&quot;#msg-error&quot;).hide(10);</span><br><span class="line">                        $(&quot;#msg-error&quot;).show(100);</span><br><span class="line">                        $(&quot;#msg-error-p&quot;).html(data.msg);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                error: function (jqXHR) &#123;</span><br><span class="line">                    $(&quot;#msg-error&quot;).hide(10);</span><br><span class="line">                    $(&quot;#msg-error&quot;).show(100);</span><br><span class="line">                    $(&quot;#msg-error-p&quot;).html(&quot;发生错误：&quot; + jqXHR.status);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br></pre></td></tr></table></figure><h3 id="后端代码"><a href="#后端代码" class="headerlink" title="后端代码"></a>后端代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">@Route(value = &quot;node/:id&quot;, method = HttpMethod.PUT)</span><br><span class="line">    @JSON</span><br><span class="line">    public Result update(@PathParam Integer id, @QueryParam String name, @QueryParam String server,</span><br><span class="line">                         @QueryParam String method, @QueryParam int custom_method,</span><br><span class="line">                         @QueryParam Float traffic_rate, @QueryParam String info,</span><br><span class="line">                         @QueryParam int type, @QueryParam String status, @QueryParam int sort) &#123;</span><br><span class="line"></span><br><span class="line">        Node node = new Node();</span><br><span class="line">        node.setId(id);</span><br><span class="line">        node.setName(name);</span><br><span class="line">        node.setServer(server);</span><br><span class="line">        node.setMethod(method);</span><br><span class="line">        node.setCustom_method(custom_method == 1);</span><br><span class="line">        node.setTraffic_rate(traffic_rate);</span><br><span class="line">        node.setInfo(info);</span><br><span class="line">        node.setType(type);</span><br><span class="line">        node.setStatus(status);</span><br><span class="line">        node.setSort(sort);</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            nodeService.update(node);</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            LOGGER.error(&quot;修改节点失败&quot;, e);</span><br><span class="line">            return Result.fail(&quot;修改失败&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        return Result.ok(&quot;修改成功&quot;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>[colorr]@QueryParam Float traffic_rate 这个值一直都是 null[/colorr]</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>[colory]目前还未找到，如果有人找到，欢迎留言！[/colory]</p>]]></content>
    
    <summary type="html">
    
      从网上下载了一个开源项目，然后发现 bug 太多，发现一个比较奇怪的问题，前端传值已经有值了，后端接收的时候只有一个 Float 的接收不到值
    
    </summary>
    
      <category term="java" scheme="https://blog.jihuiweb.com/categories/java/"/>
    
    
      <category term="Float" scheme="https://blog.jihuiweb.com/tags/Float/"/>
    
      <category term="QueryParam" scheme="https://blog.jihuiweb.com/tags/QueryParam/"/>
    
  </entry>
  
  <entry>
    <title>idea jrebel 热部署搭建</title>
    <link href="https://blog.jihuiweb.com/2019/12/04/category/java/idea-jrebel-%E7%83%AD%E9%83%A8%E7%BD%B2%E6%90%AD%E5%BB%BA/"/>
    <id>https://blog.jihuiweb.com/2019/12/04/category/java/idea-jrebel-热部署搭建/</id>
    <published>2019-12-04T07:21:05.000Z</published>
    <updated>2021-09-04T05:58:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>springboot 项目是不是每次改完都需要重新启动，影响效率，于是搭建热部署，不用重启，提高开发效率<br><a id="more"></a></p><ol><li>安装插件jrebel</li><li>idea 插件市场搜索[colorg]JRebel for IntelliJ[/colorg] [colory]下载安装可能有点慢，重启后直接激活即可，激活不了自行百度[/colory]</li><li>组合键 Shift+Ctrl+Alt+/，选择Registry,勾选上compiler.automake.allow.when.app.running</li><li>Preferences | Build, Execution, Deployment | Compiler,勾选Automatically show first error editor,Build project automatically</li><li>View | Tool Windows | JRebel ,勾选第一个，此时会在 Resources 目录下创建一个rebel.xml 文件</li><li>使用jrebel debug模式重新运行你的项目，更改html或者类的时候，idea就会自动的编译了</li></ol><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p>如果不行的话，请重复已上步骤试试，特别是第5，还有其它问题，请留言哦！</p></blockquote>]]></content>
    
    <summary type="html">
    
      springboot 项目是不是每次改完都需要重新启动，影响效率，于是搭建热部署，不用重启，提高开发效率
    
    </summary>
    
      <category term="java" scheme="https://blog.jihuiweb.com/categories/java/"/>
    
    
      <category term="idea" scheme="https://blog.jihuiweb.com/tags/idea/"/>
    
      <category term="jrebel" scheme="https://blog.jihuiweb.com/tags/jrebel/"/>
    
      <category term="热部署" scheme="https://blog.jihuiweb.com/tags/%E7%83%AD%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>使用Phabricator做为Code Review工具</title>
    <link href="https://blog.jihuiweb.com/2019/11/15/category/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/%E4%BD%BF%E7%94%A8Phabricator%E5%81%9A%E4%B8%BACode%20Review%E5%B7%A5%E5%85%B7/"/>
    <id>https://blog.jihuiweb.com/2019/11/15/category/服务器运维/使用Phabricator做为Code Review工具/</id>
    <published>2019-11-15T06:41:00.000Z</published>
    <updated>2021-09-04T06:20:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>代码提交不审查是会影响整体的代码质量的，代码在推送到远端仓库的时候会增加一个审查环节，这里使用Phabricator<br><a id="more"></a></p><h3 id="设置规则"><a href="#设置规则" class="headerlink" title="设置规则"></a>设置规则</h3><ol><li>搜索herald 增加一个规则，代码 push 时候进入审查阶段</li><li>规则设置 Conditions<br>When [u]all of [/u] these conditions are met:<br>[u]Accepted Differential revision[/u] [u]does not exist[/u]<br>[u]仓库[/u] [u]is any of[/u] [u]输入你的仓库名称[/u]</li><li>操作<br>Take these actions every time this rule matches:<br>[u]Block push with message[/u] [u]推送消息的内容[/u]</li></ol><blockquote><p>保存后，你提交代码并推送的时候会被阻止，等待审查</p></blockquote><h3 id="客户端安装审查工具"><a href="#客户端安装审查工具" class="headerlink" title="客户端安装审查工具"></a>客户端安装审查工具</h3><p><a href="https://my.oschina.net/miger/blog/775609" target="_blank" rel="noopener">查看这篇文章</a></p><h3 id="操作说明"><a href="#操作说明" class="headerlink" title="操作说明"></a>操作说明</h3><p>[colorr]注意：作者不能审查，需要审查者登录才能审查完毕[/colorr]</p><h4 id="审查人，可进行的操作有"><a href="#审查人，可进行的操作有" class="headerlink" title="审查人，可进行的操作有"></a>审查人，可进行的操作有</h4><ul><li>Comment：说点什么。可以针对某行代码进行评论，直接点击行号即可</li><li>Accept Revision：接受变更，这哥们代码写得不错，不需要改</li><li>Request Changes：不行，还要改</li><li>Resign as Reviewer：重新指定审查代码的人</li><li>Commandeer Revision：字面意思是将这个Revision据为己有的意思，实际上这个时候Reviewer的身份已经变为Owner的身份了，不能再进行Review了，但是Comment还是可以的</li><li>Add Reviewer：添加审查人</li><li>Add Subscribers：添加订阅者，CC</li></ul><h4 id="作者，可进行的操作有"><a href="#作者，可进行的操作有" class="headerlink" title="作者，可进行的操作有"></a>作者，可进行的操作有</h4><ul><li>Comment：说点什么。可以针对某行代码进行评论，直接点击行号即可</li><li>Abandon Revision：废除版本。废除后，这个版本就不需要再审核了</li><li>Plan Changes：计划变更，我自己发现了一些问题或者需求有变，正在改</li><li>Add Reviewer：添加其它审查人（除当前审查人外）</li><li>Add Subscribers：添加订阅者，CC</li></ul><h4 id="Arcanist-命令交互"><a href="#Arcanist-命令交互" class="headerlink" title="Arcanist - 命令交互"></a>Arcanist - 命令交互</h4><ul><li>arc diff：发送变更详情和审查请求</li><li>arc land：推送变更（Git and Mercurial），当通过审查后使用这个命令</li><li>arc list：显示变更处理的情况</li><li>arc cover：查找最有可能审查变更的人</li><li>arc patch：给版本打补丁</li><li>arc export：从Differential下载补丁</li><li>arc amend：更新Git commit</li><li>arc commit：提交变更（SVN）</li><li>arc branch：查看Git branches更加详细的信息</li></ul><h4 id="在配置了-lint-和-unit-test-intergration后，可以用这些命令"><a href="#在配置了-lint-和-unit-test-intergration后，可以用这些命令" class="headerlink" title="在配置了 lint 和 unit test intergration后，可以用这些命令"></a>在配置了 lint 和 unit test intergration后，可以用这些命令</h4><ul><li>arc lint：静态代码检查</li><li>arc unit：单元测试</li></ul><h4 id="与其它工具交互"><a href="#与其它工具交互" class="headerlink" title="与其它工具交互"></a>与其它工具交互</h4><ul><li>arc upload：上传文件</li><li>arc download：下载文件</li><li>arc paste：创建和查看剪贴</li></ul><h4 id="高级功能"><a href="#高级功能" class="headerlink" title="高级功能"></a>高级功能</h4><ul><li>arc call-conduit：执行 Conduit 方法</li><li>arc liberate：创建或更新 libphutil 库</li><li>arc shell-complete：激活 tab 补全</li></ul>]]></content>
    
    <summary type="html">
    
      代码提交不审查是会影响整体的代码质量的，代码在推送到远端仓库的时候会增加一个审查环节，这里使用Phabricator
    
    </summary>
    
      <category term="服务器运维" scheme="https://blog.jihuiweb.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Phabricator" scheme="https://blog.jihuiweb.com/tags/Phabricator/"/>
    
      <category term="工具" scheme="https://blog.jihuiweb.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>关于抽象类和继承</title>
    <link href="https://blog.jihuiweb.com/2019/11/15/category/java/%E5%85%B3%E4%BA%8E%E6%8A%BD%E8%B1%A1%E7%B1%BB%E5%92%8C%E7%BB%A7%E6%89%BF/"/>
    <id>https://blog.jihuiweb.com/2019/11/15/category/java/关于抽象类和继承/</id>
    <published>2019-11-15T03:12:33.000Z</published>
    <updated>2021-09-04T05:55:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>抽象类的继承很常见，但是使用不当就会不知所措了<br><a id="more"></a></p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><ol><li>抽象方法不能有方法主体</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">abstract void xxx();</span><br></pre></td></tr></table></figure><ol start="2"><li>抽象类不能被实例化。因为抽象类中方法未具体化，这是一种不完整的类，所以直接实例化也就没有意义了。</li><li>抽象类中不一定要包含abstrace方法。也就是了，抽象中可以没有abstract方法。</li><li>一旦类中包含了abstract方法，那类该类必须声明为abstract类。</li><li>抽象类可以被继承,当继承的父类是抽象类时，需要将抽象类中的所有抽象方法全部实现。</li></ol><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><h4 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line">package com.jihuiweb.model;</span><br><span class="line"></span><br><span class="line">import java.io.InputStream;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public abstract class TestParentConfig&#123;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 获取 App ID</span><br><span class="line">     *</span><br><span class="line">     * @return App ID</span><br><span class="line">     */</span><br><span class="line">    abstract String getAppID();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 获取 Mch ID</span><br><span class="line">     *</span><br><span class="line">     * @return Mch ID</span><br><span class="line">     */</span><br><span class="line">    abstract String getMchID();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 获取 API 密钥</span><br><span class="line">     *</span><br><span class="line">     * @return API密钥</span><br><span class="line">     */</span><br><span class="line">    abstract String getKey();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 获取商户证书内容</span><br><span class="line">     *</span><br><span class="line">     * @return 商户证书内容</span><br><span class="line">     */</span><br><span class="line">    abstract InputStream getCertStream();</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * HTTP(S) 连接超时时间，单位毫秒</span><br><span class="line">     *</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public int getHttpConnectTimeoutMs() &#123;</span><br><span class="line">        return 6*1000;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * HTTP(S) 读数据超时时间，单位毫秒</span><br><span class="line">     *</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public int getHttpReadTimeoutMs() &#123;</span><br><span class="line">        return 8*1000;</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * 是否自动上报。</span><br><span class="line">     * 若要关闭自动上报，子类中实现该函数返回 false 即可。</span><br><span class="line">     *</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public boolean shouldAutoReport() &#123;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 进行健康上报的线程的数量</span><br><span class="line">     *</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public int getReportWorkerNum() &#123;</span><br><span class="line">        return 6;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 健康上报缓存消息的最大数量。会有线程去独立上报</span><br><span class="line">     * 粗略计算：加入一条消息200B，10000消息占用空间 2000 KB，约为2MB，可以接受</span><br><span class="line">     *</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public int getReportQueueMaxSize() &#123;</span><br><span class="line">        return 10000;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 批量上报，一次最多上报多个数据</span><br><span class="line">     *</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public int getReportBatchSize() &#123;</span><br><span class="line">        return 10;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="子类，继承抽象类"><a href="#子类，继承抽象类" class="headerlink" title="子类，继承抽象类"></a>子类，继承抽象类</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">package com.jihuiweb.model;</span><br><span class="line"></span><br><span class="line">import java.io.InputStream;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public class TestConfig extends TestParentConfig &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    String getAppID() &#123;</span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    String getMchID() &#123;</span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    String getKey() &#123;</span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    InputStream getCertStream() &#123;</span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h3><blockquote><p>如果父类是 sdk 来的，要从项目种继承它，这种情况，父类默认是[u]protected[/u]类型的，只能在同一个包下才能继承<br>，尝试改成和 sdk 一样的包名！</p></blockquote><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>[colorr]如果这样写还会出现语法编译不通过的情况，建议你查看下你的包是否有问题、冲突等问题[/colorr]</p>]]></content>
    
    <summary type="html">
    
      抽象类的继承很常见，但是使用不当就会不知所措了
    
    </summary>
    
      <category term="java" scheme="https://blog.jihuiweb.com/categories/java/"/>
    
    
      <category term="抽象类" scheme="https://blog.jihuiweb.com/tags/%E6%8A%BD%E8%B1%A1%E7%B1%BB/"/>
    
      <category term="继承" scheme="https://blog.jihuiweb.com/tags/%E7%BB%A7%E6%89%BF/"/>
    
  </entry>
  
</feed>
